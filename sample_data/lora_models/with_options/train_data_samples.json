[
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, forming a grid Diagonals in each quadrant. A triangular appendage, the apex being the midpoint of one of the sides of the grid. A line from the apex to the midpoint of the base, and a line bisecting this line and intersecting with the midpoints of the two sides of the triangle. There are fourteen \"dog\" pieces and one \"jaguar\" piece. The jaguar attempts to capture all of the dogs by hopping over them. The dogs attempt to surround the jaguar and block it from moving. Pieces move from the points where lines intersect to adjacent points along the lines on the board. The objective of the player 1 is to capture all the dogs.\n\n### Response:\n",
    "completion": "(game \"Adugo\" (players 2) (equipment {(board (merge (shift 0 2 (square 5 diagonals:Alternating)) (wedge 3)) use:Vertex) (piece \"Jaguar\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Dog2\" (difference (expand (sites Top) steps:2) (sites {\"C5\"}))) (place \"Jaguar1\" coord:\"C5\")}) (play (forEach Piece)) (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P2) 0) (result P2 Loss))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, forming a grid Diagonals in each quadrant. A triangular appendage, the apex being the midpoint of one of the sides of the grid. A line from the apex to the midpoint of the base, and a line bisecting this line and intersecting with the midpoints of the two sides of the triangle. There are fourteen \"dog\" pieces and one \"jaguar\" piece. The jaguar attempts to capture all of the dogs by hopping over them. The dogs attempt to surround the jaguar and block it from moving. Pieces move from the points where lines intersect to adjacent points along the lines on the board. The objective of the player 1 is to capture all the dogs."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, forming a grid Diagonals in each quadrant. A triangular appendage, the apex being the midpoint of one of the sides of the grid. A line from the apex to the midpoint of the base, and a line bisecting this line and intersecting with the midpoints of the two sides of the triangle. There are fourteen \"dog\" pieces and one \"jaguar\" piece. The jaguar attempts to capture all of the dogs by hopping over them. The dogs attempt to surround the jaguar and block it from moving. Pieces move from the points where lines intersect to adjacent points along the lines on the board. The objective of the player 1 is to capture at least five dogs.\n\n### Response:\n",
    "completion": "(game \"Adugo\" (players 2) (equipment {(board (merge (shift 0 2 (square 5 diagonals:Alternating)) (wedge 3)) use:Vertex) (piece \"Jaguar\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Dog2\" (difference (expand (sites Top) steps:2) (sites {\"C5\"}))) (place \"Jaguar1\" coord:\"C5\")}) (play (forEach Piece)) (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P2) 9) (result P2 Loss))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, forming a grid Diagonals in each quadrant. A triangular appendage, the apex being the midpoint of one of the sides of the grid. A line from the apex to the midpoint of the base, and a line bisecting this line and intersecting with the midpoints of the two sides of the triangle. There are fourteen \"dog\" pieces and one \"jaguar\" piece. The jaguar attempts to capture all of the dogs by hopping over them. The dogs attempt to surround the jaguar and block it from moving. Pieces move from the points where lines intersect to adjacent points along the lines on the board. The objective of the player 1 is to capture at least five dogs."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, forming a grid Diagonals in each quadrant. A triangular appendage, the apex being the midpoint of one of the sides of the grid. A line from the apex to the midpoint of the base, and a line bisecting this line and intersecting with the midpoints of the two sides of the triangle. There are fourteen \"dog\" pieces and one \"jaguar\" piece. The jaguar attempts to capture all of the dogs by hopping over them. The dogs attempt to surround the jaguar and block it from moving. Pieces move from the points where lines intersect to adjacent points along the lines on the board. The objective of the player 1 is to capture all the dogs.\n\n### Response:\n",
    "completion": "(game \"Adugo\" (players 2) (equipment {(board (merge (shift 0 2 (square 5 diagonals:Alternating)) (wedge 3)) use:Vertex) (piece \"Jaguar\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Dog2\" (difference (expand (sites Top) steps:2) (sites {\"C5\"}))) (place \"Jaguar1\" coord:\"C5\")}) (play (forEach Piece)) (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P2) 0) (result P2 Loss))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, forming a grid Diagonals in each quadrant. A triangular appendage, the apex being the midpoint of one of the sides of the grid. A line from the apex to the midpoint of the base, and a line bisecting this line and intersecting with the midpoints of the two sides of the triangle. There are fourteen \"dog\" pieces and one \"jaguar\" piece. The jaguar attempts to capture all of the dogs by hopping over them. The dogs attempt to surround the jaguar and block it from moving. Pieces move from the points where lines intersect to adjacent points along the lines on the board. The objective of the player 1 is to capture all the dogs."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on the Fox and Geese board, but the top arm of the cross is surrounded by a double line, indicating it is a fortress, in which one player puts two officers. The opponent has 24 pieces, which occupy the points outside the fortress. Officers may capture one of the opponent's pieces by hopping over it to an empty space immediately on the opposite side of the opponent's piece. If the officer does not capture when it is possible, it is huffed. The soldiers win by occupying all of the points in the fortress or by blocking the officers from being able to move; the officers win by capturing enough soldiers to prevent this.\n\n### Response:\n",
    "completion": "(game \"Asalto\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (piece \"Marker\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Marker\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Marker1\" (sites {\"C6\" \"E6\"})) (place \"Marker2\" (union (expand (union (sites Right) (sites Left))) (expand (sites Bottom) steps:3)))}) (play (if (is Mover P1) (do (forEach Site (sites From (forEach Piece \"Marker\" (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))))) (remember Value \"From\" (site))) next:(forEach Piece) (then (and (if (!= 0 (count Sites in:(sites (values Remembered \"From\")))) (if (= 1 (count Steps (last From) (last To))) (and (forEach Site (sites (values Remembered \"From\")) (remove (site))) (if (is In (last From) (sites (values Remembered \"From\"))) (remove (last To)))))) (forget Value All)))) (forEach Piece))) (end {(if (no Pieces P2) (result P1 Win)) (if (or (or (no Pieces P1) (no Moves P1)) (all Sites (expand (sites Top) steps:2) if:(= (who at:(site)) P2))) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on the Fox and Geese board, but the top arm of the cross is surrounded by a double line, indicating it is a fortress, in which one player puts two officers. The opponent has 24 pieces, which occupy the points outside the fortress. Officers may capture one of the opponent's pieces by hopping over it to an empty space immediately on the opposite side of the opponent's piece. If the officer does not capture when it is possible, it is huffed. The soldiers win by occupying all of the points in the fortress or by blocking the officers from being able to move; the officers win by capturing enough soldiers to prevent this."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on the Fox and Geese board, but the top arm of the cross is surrounded by a double line, indicating it is a fortress, in which one player puts two officers. The opponent has 24 pieces, which occupy the points outside the fortress. Officers may capture one of the opponent's pieces by hopping over it to an empty space immediately on the opposite side of the opponent's piece. If the officer does not capture when it is possible, it is huffed. The soldiers win by occupying all of the points in the fortress or by blocking the officers from being able to move; the officers win by capturing enough soldiers to prevent this.\n\n### Response:\n",
    "completion": "(game \"Asalto\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (piece \"Marker\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Marker\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Marker1\" (sites {\"C6\" \"E6\"})) (place \"Marker2\" (union (expand (union (sites Right) (sites Left))) (expand (sites Bottom) steps:3)))}) (play (if (is Mover P1) (do (forEach Site (sites From (forEach Piece \"Marker\" (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))))) (remember Value \"From\" (site))) next:(forEach Piece) (then (and (if (!= 0 (count Sites in:(sites (values Remembered \"From\")))) (if (= 1 (count Steps (last From) (last To))) (and (forEach Site (sites (values Remembered \"From\")) (remove (site))) (if (is In (last From) (sites (values Remembered \"From\"))) (remove (last To)))))) (forget Value All)))) (forEach Piece))) (end {(if (no Pieces P2) (result P1 Win)) (if (or (or (no Pieces P1) (no Moves P1)) (all Sites (expand (sites Top) steps:2) if:(= (who at:(site)) P2))) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on the Fox and Geese board, but the top arm of the cross is surrounded by a double line, indicating it is a fortress, in which one player puts two officers. The opponent has 24 pieces, which occupy the points outside the fortress. Officers may capture one of the opponent's pieces by hopping over it to an empty space immediately on the opposite side of the opponent's piece. If the officer does not capture when it is possible, it is huffed. The soldiers win by occupying all of the points in the fortress or by blocking the officers from being able to move; the officers win by capturing enough soldiers to prevent this."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on the Fox and Geese board, but the top arm of the cross is surrounded by a double line, indicating it is a fortress, in which one player puts two officers. The opponent has 24 pieces, which occupy the points outside the fortress. Officers may capture one of the opponent's pieces by hopping over it to an empty space immediately on the opposite side of the opponent's piece. If the officer does not capture when it is possible, it is huffed. The soldiers win by occupying all of the points in the fortress or by blocking the officers from being able to move; the officers win by capturing enough soldiers to prevent this.\n\n### Response:\n",
    "completion": "(game \"Asalto\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (piece \"Marker\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Marker\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Marker1\" (sites {\"C6\" \"E6\"})) (place \"Marker2\" (union (expand (union (sites Right) (sites Left))) (expand (sites Bottom) steps:3)))}) (play (if (is Mover P1) (do (forEach Site (sites From (forEach Piece \"Marker\" (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))))) (remember Value \"From\" (site))) next:(forEach Piece) (then (and (if (!= 0 (count Sites in:(sites (values Remembered \"From\")))) (if (= 1 (count Steps (last From) (last To))) (and (forEach Site (sites (values Remembered \"From\")) (remove (site))) (if (is In (last From) (sites (values Remembered \"From\"))) (remove (last To)))))) (forget Value All)))) (forEach Piece))) (end {(if (no Pieces P2) (result P1 Win)) (if (or (or (no Pieces P1) (no Moves P1)) (all Sites (expand (sites Top) steps:2) if:(= (who at:(site)) P2))) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on the Fox and Geese board, but the top arm of the cross is surrounded by a double line, indicating it is a fortress, in which one player puts two officers. The opponent has 24 pieces, which occupy the points outside the fortress. Officers may capture one of the opponent's pieces by hopping over it to an empty space immediately on the opposite side of the opponent's piece. If the officer does not capture when it is possible, it is huffed. The soldiers win by occupying all of the points in the fortress or by blocking the officers from being able to move; the officers win by capturing enough soldiers to prevent this."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals drawn in the four quadrants of the board. Two triangles, their apices intersecting the main board at opposite midpoints. The bast of the triangle is bisected by a line drawn from the apex, and this line is bisected and intersects with the other two sides of the triangle. One player plays as two tigers, which can be placed anywhere on the board, and the other player plays as 32 goats, which begin on the four central points of the quadrants of the square board, eight per stack. Players alternate turns moving a piece to an empty adjacent spot along the lines. The goats move one at a time from their stacks, and cannot be restacked once they have been moved. The tiger may capture a goat by hopping over it to an empty spot immediately on the opposite side of an adjacent goat. Multiple captures in one turn are allowed, but a tiger cannot hop over a stack of goats and hop over it again in the opposite direction. When tigers hop over a stack of goats, only one goat is captured. The goats win by blocking the tigers from being able to move; the tigers win by capturing all the goats.\n\n### Response:\n",
    "completion": "(game \"Bagh Bandi\" (players 2) (equipment {(board (merge {(square 5 diagonals:Alternating) (shift 0 4 (rotate 180 (wedge 3))) (shift 0 -2 (wedge 3))}) use:Vertex) (piece \"Goat\" P2 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P1 (or (move Step (to if:(is Empty (to)))) (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (difference Orthogonal OppositeDirection) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))))) (regions \"CentralSites\" (sites {6 8 16 18})) (hand P1)}) (rules (start {(place Stack \"Tiger1\" (handSite P1) count:2) (place Stack \"Goat2\" 6 count:8) (place Stack \"Goat2\" 8 count:8) (place Stack \"Goat2\" 16 count:8) (place Stack \"Goat2\" 18 count:8)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)) (then (if (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase Mover (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (if (is Prev Mover) (or (move Hop (from (last To)) (difference Orthogonal OppositeDirection) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (difference Orthogonal OppositeDirection) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))) (move Pass)) (forEach Piece top:True))))} (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals drawn in the four quadrants of the board. Two triangles, their apices intersecting the main board at opposite midpoints. The bast of the triangle is bisected by a line drawn from the apex, and this line is bisected and intersects with the other two sides of the triangle. One player plays as two tigers, which can be placed anywhere on the board, and the other player plays as 32 goats, which begin on the four central points of the quadrants of the square board, eight per stack. Players alternate turns moving a piece to an empty adjacent spot along the lines. The goats move one at a time from their stacks, and cannot be restacked once they have been moved. The tiger may capture a goat by hopping over it to an empty spot immediately on the opposite side of an adjacent goat. Multiple captures in one turn are allowed, but a tiger cannot hop over a stack of goats and hop over it again in the opposite direction. When tigers hop over a stack of goats, only one goat is captured. The goats win by blocking the tigers from being able to move; the tigers win by capturing all the goats."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals drawn in the four quadrants of the board. Two triangles, their apices intersecting the main board at opposite midpoints. The bast of the triangle is bisected by a line drawn from the apex, and this line is bisected and intersects with the other two sides of the triangle. One player plays as two tigers, which can be placed anywhere on the board, and the other player plays as 32 goats, which begin on the four central points of the quadrants of the square board, eight per stack. Players alternate turns moving a piece to an empty adjacent spot along the lines. The goats move one at a time from their stacks, and cannot be restacked once they have been moved. The tiger may capture a goat by hopping over it to an empty spot immediately on the opposite side of an adjacent goat. Multiple captures in one turn are allowed, but a tiger cannot hop over a stack of goats and hop over it again in the opposite direction. When tigers hop over a stack of goats, only one goat is captured. The goats win by blocking the tigers from being able to move; the tigers win by capturing all the goats.\n\n### Response:\n",
    "completion": "(game \"Bagh Bandi\" (players 2) (equipment {(board (merge {(square 5 diagonals:Alternating) (shift 0 4 (rotate 180 (wedge 3))) (shift 0 -2 (wedge 3))}) use:Vertex) (piece \"Goat\" P2 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P1 (or (move Step (to if:(is Empty (to)))) (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (difference Orthogonal OppositeDirection) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))))) (regions \"CentralSites\" (sites {6 8 16 18})) (hand P1)}) (rules (start {(place Stack \"Tiger1\" (handSite P1) count:2) (place Stack \"Goat2\" 6 count:8) (place Stack \"Goat2\" 8 count:8) (place Stack \"Goat2\" 16 count:8) (place Stack \"Goat2\" 18 count:8)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)) (then (if (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase Mover (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (if (is Prev Mover) (or (move Hop (from (last To)) (difference Orthogonal OppositeDirection) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (difference Orthogonal OppositeDirection) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))) (move Pass)) (forEach Piece top:True))))} (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals drawn in the four quadrants of the board. Two triangles, their apices intersecting the main board at opposite midpoints. The bast of the triangle is bisected by a line drawn from the apex, and this line is bisected and intersects with the other two sides of the triangle. One player plays as two tigers, which can be placed anywhere on the board, and the other player plays as 32 goats, which begin on the four central points of the quadrants of the square board, eight per stack. Players alternate turns moving a piece to an empty adjacent spot along the lines. The goats move one at a time from their stacks, and cannot be restacked once they have been moved. The tiger may capture a goat by hopping over it to an empty spot immediately on the opposite side of an adjacent goat. Multiple captures in one turn are allowed, but a tiger cannot hop over a stack of goats and hop over it again in the opposite direction. When tigers hop over a stack of goats, only one goat is captured. The goats win by blocking the tigers from being able to move; the tigers win by capturing all the goats."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals drawn in the four quadrants of the board. Two triangles, their apices intersecting the main board at opposite midpoints. The bast of the triangle is bisected by a line drawn from the apex, and this line is bisected and intersects with the other two sides of the triangle. One player plays as two tigers, which can be placed anywhere on the board, and the other player plays as 32 goats, which begin on the four central points of the quadrants of the square board, eight per stack. Players alternate turns moving a piece to an empty adjacent spot along the lines. The goats move one at a time from their stacks, and cannot be restacked once they have been moved. The tiger may capture a goat by hopping over it to an empty spot immediately on the opposite side of an adjacent goat. Multiple captures in one turn are allowed, but a tiger cannot hop over a stack of goats and hop over it again in the opposite direction. When tigers hop over a stack of goats, only one goat is captured. The goats win by blocking the tigers from being able to move; the tigers win by capturing all the goats.\n\n### Response:\n",
    "completion": "(game \"Bagh Bandi\" (players 2) (equipment {(board (merge {(square 5 diagonals:Alternating) (shift 0 4 (rotate 180 (wedge 3))) (shift 0 -2 (wedge 3))}) use:Vertex) (piece \"Goat\" P2 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P1 (or (move Step (to if:(is Empty (to)))) (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (difference Orthogonal OppositeDirection) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))))) (regions \"CentralSites\" (sites {6 8 16 18})) (hand P1)}) (rules (start {(place Stack \"Tiger1\" (handSite P1) count:2) (place Stack \"Goat2\" 6 count:8) (place Stack \"Goat2\" 8 count:8) (place Stack \"Goat2\" 16 count:8) (place Stack \"Goat2\" 18 count:8)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)) (then (if (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase Mover (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (if (is Prev Mover) (or (move Hop (from (last To)) (difference Orthogonal OppositeDirection) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (difference Orthogonal OppositeDirection) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))) (move Pass)) (forEach Piece top:True))))} (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals drawn in the four quadrants of the board. Two triangles, their apices intersecting the main board at opposite midpoints. The bast of the triangle is bisected by a line drawn from the apex, and this line is bisected and intersects with the other two sides of the triangle. One player plays as two tigers, which can be placed anywhere on the board, and the other player plays as 32 goats, which begin on the four central points of the quadrants of the square board, eight per stack. Players alternate turns moving a piece to an empty adjacent spot along the lines. The goats move one at a time from their stacks, and cannot be restacked once they have been moved. The tiger may capture a goat by hopping over it to an empty spot immediately on the opposite side of an adjacent goat. Multiple captures in one turn are allowed, but a tiger cannot hop over a stack of goats and hop over it again in the opposite direction. When tigers hop over a stack of goats, only one goat is captured. The goats win by blocking the tigers from being able to move; the tigers win by capturing all the goats."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 board, played on intersections, with lines forming a diamond shape connecting the midpoints of the edges of the board. One player plays with two tiger pieces, placed on the midpoints of two opposite sides. The other player plays with twenty goats, divided into four stacks of five, placed on the next adjacent spot to the tigers on the diamond. The goats move first. Goats may move one at a time to any adjacent vacant spot. The tiger may move in the same manner, but also may capture a piece by hopping over it. Multiple captures can be made on the same turn with subsequent hops, but only the top goat in a stack is captured when a tiger leaps over it. The goal of the goats is to surround the tigers so they cannot move; the goal of the tigers is to capture all the goats. Initiallly, the tigers are placed at opposite sites of the top and the bottom of the board. Played on a board with the diagonals forming a diamond. The tiger can jump a sequence of pieces to capture.\n\n### Response:\n",
    "completion": "(game \"Bagh Guti\" (players 2) (equipment {(board (makeFaces (remove (square 5 diagonals:Alternating) edges:{{{0 0} {1 1}} {{1 1} {2 2}} {{2 2} {3 3}} {{3 3} {4 4}} {{4 0} {3 1}} {{3 1} {2 2}} {{2 2} {1 3}} {{1 3} {0 4}}})) use:Vertex) (piece \"Goat\" P1 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P2 (or (move Step (to if:(is Empty (to)))) (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain))))))}) (rules (start {(place Stack \"Goat1\" (sites {\"B2\" \"D2\" \"B4\" \"D4\"}) counts:{5 5 5 5}) (place \"Tiger2\" (sites {\"C1\" \"C5\"}))}) (play (if (is Prev Mover) (or (move Pass) (move Hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain))))) (forEach Piece top:True))) (end {(if (no Moves P2) (result P1 Win)) (if (no Pieces P1) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 board, played on intersections, with lines forming a diamond shape connecting the midpoints of the edges of the board. One player plays with two tiger pieces, placed on the midpoints of two opposite sides. The other player plays with twenty goats, divided into four stacks of five, placed on the next adjacent spot to the tigers on the diamond. The goats move first. Goats may move one at a time to any adjacent vacant spot. The tiger may move in the same manner, but also may capture a piece by hopping over it. Multiple captures can be made on the same turn with subsequent hops, but only the top goat in a stack is captured when a tiger leaps over it. The goal of the goats is to surround the tigers so they cannot move; the goal of the tigers is to capture all the goats. Initiallly, the tigers are placed at opposite sites of the top and the bottom of the board. Played on a board with the diagonals forming a diamond. The tiger can jump a sequence of pieces to capture."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 board, played on intersections, with lines forming a diamond shape connecting the midpoints of the edges of the board. One player plays with two tiger pieces, placed on the midpoints of two opposite sides. The other player plays with twenty goats, divided into four stacks of five, placed on the next adjacent spot to the tigers on the diamond. The goats move first. Goats may move one at a time to any adjacent vacant spot. The tiger may move in the same manner, but also may capture a piece by hopping over it. Multiple captures can be made on the same turn with subsequent hops, but only the top goat in a stack is captured when a tiger leaps over it. The goal of the goats is to surround the tigers so they cannot move; the goal of the tigers is to capture all the goats. Initiallly, the tigers are placed at the center and at the middle of the top of the board. Played on a Alquerque board. The tiger can not jump a sequence of pieces to capture.\n\n### Response:\n",
    "completion": "(game \"Bagh Guti\" (players 2) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (piece \"Goat\" P1 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P2 (or (move Step (to if:(is Empty (to)))) (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))))}) (rules (start {(place Stack \"Goat1\" (sites {\"B2\" \"D2\" \"B4\" \"D4\"}) counts:{5 5 5 5}) (place \"Tiger2\" (sites {\"C3\" \"C5\"}))}) (play (forEach Piece top:True)) (end {(if (no Moves P2) (result P1 Win)) (if (no Pieces P1) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 board, played on intersections, with lines forming a diamond shape connecting the midpoints of the edges of the board. One player plays with two tiger pieces, placed on the midpoints of two opposite sides. The other player plays with twenty goats, divided into four stacks of five, placed on the next adjacent spot to the tigers on the diamond. The goats move first. Goats may move one at a time to any adjacent vacant spot. The tiger may move in the same manner, but also may capture a piece by hopping over it. Multiple captures can be made on the same turn with subsequent hops, but only the top goat in a stack is captured when a tiger leaps over it. The goal of the goats is to surround the tigers so they cannot move; the goal of the tigers is to capture all the goats. Initiallly, the tigers are placed at the center and at the middle of the top of the board. Played on a Alquerque board. The tiger can not jump a sequence of pieces to capture."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 board, played on intersections, with lines forming a diamond shape connecting the midpoints of the edges of the board. One player plays with two tiger pieces, placed on the midpoints of two opposite sides. The other player plays with twenty goats, divided into four stacks of five, placed on the next adjacent spot to the tigers on the diamond. The goats move first. Goats may move one at a time to any adjacent vacant spot. The tiger may move in the same manner, but also may capture a piece by hopping over it. Multiple captures can be made on the same turn with subsequent hops, but only the top goat in a stack is captured when a tiger leaps over it. The goal of the goats is to surround the tigers so they cannot move; the goal of the tigers is to capture all the goats. Initiallly, the tigers are placed at opposite sites of the top and the bottom of the board. Played on a board with no diagonal. The tiger can jump a sequence of pieces to capture.\n\n### Response:\n",
    "completion": "(game \"Bagh Guti\" (players 2) (equipment {(board (square 5) use:Vertex) (piece \"Goat\" P1 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P2 (or (move Step (to if:(is Empty (to)))) (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain))))))}) (rules (start {(place Stack \"Goat1\" (sites {\"B2\" \"D2\" \"B4\" \"D4\"}) counts:{5 5 5 5}) (place \"Tiger2\" (sites {\"C1\" \"C5\"}))}) (play (if (is Prev Mover) (or (move Pass) (move Hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain))))) (forEach Piece top:True))) (end {(if (no Moves P2) (result P1 Win)) (if (no Pieces P1) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 board, played on intersections, with lines forming a diamond shape connecting the midpoints of the edges of the board. One player plays with two tiger pieces, placed on the midpoints of two opposite sides. The other player plays with twenty goats, divided into four stacks of five, placed on the next adjacent spot to the tigers on the diamond. The goats move first. Goats may move one at a time to any adjacent vacant spot. The tiger may move in the same manner, but also may capture a piece by hopping over it. Multiple captures can be made on the same turn with subsequent hops, but only the top goat in a stack is captured when a tiger leaps over it. The goal of the goats is to surround the tigers so they cannot move; the goal of the tigers is to capture all the goats. Initiallly, the tigers are placed at opposite sites of the top and the bottom of the board. Played on a board with no diagonal. The tiger can jump a sequence of pieces to capture."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on 5x5 grid including diagonals and pieces are played on the intersections of the lines. One player has four tigers, placed on the corners, and the other has up to 20 goats, placed on the board on a free space. Tigers and goats can move to an adjacent intersection along the lines on the board. Tigers may capture goats by hopping over them. The game ends when tigers have captured all of the goats or the goats block the tigers from being able to move. The objective of the player 2 is to capture all the tigers.\n\n### Response:\n",
    "completion": "(game \"Baghchal\" (players 2) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (hand P1) (piece \"Goat\" P1 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to))))))}) (rules (start {(place \"Tiger2\" (sites Corners)) (place \"Goat1\" (handSite P1) count:20)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))))) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P1) 0) (result P1 Loss))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on 5x5 grid including diagonals and pieces are played on the intersections of the lines. One player has four tigers, placed on the corners, and the other has up to 20 goats, placed on the board on a free space. Tigers and goats can move to an adjacent intersection along the lines on the board. Tigers may capture goats by hopping over them. The game ends when tigers have captured all of the goats or the goats block the tigers from being able to move. The objective of the player 2 is to capture all the tigers."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on 5x5 grid including diagonals and pieces are played on the intersections of the lines. One player has four tigers, placed on the corners, and the other has up to 20 goats, placed on the board on a free space. Tigers and goats can move to an adjacent intersection along the lines on the board. Tigers may capture goats by hopping over them. The game ends when tigers have captured all of the goats or the goats block the tigers from being able to move. The objective of the player 2 is to capture at least five tigers.\n\n### Response:\n",
    "completion": "(game \"Baghchal\" (players 2) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (hand P1) (piece \"Goat\" P1 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to))))))}) (rules (start {(place \"Tiger2\" (sites Corners)) (place \"Goat1\" (handSite P1) count:20)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))))) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P1) 15) (result P1 Loss))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on 5x5 grid including diagonals and pieces are played on the intersections of the lines. One player has four tigers, placed on the corners, and the other has up to 20 goats, placed on the board on a free space. Tigers and goats can move to an adjacent intersection along the lines on the board. Tigers may capture goats by hopping over them. The game ends when tigers have captured all of the goats or the goats block the tigers from being able to move. The objective of the player 2 is to capture at least five tigers."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on 5x5 grid including diagonals and pieces are played on the intersections of the lines. One player has four tigers, placed on the corners, and the other has up to 20 goats, placed on the board on a free space. Tigers and goats can move to an adjacent intersection along the lines on the board. Tigers may capture goats by hopping over them. The game ends when tigers have captured all of the goats or the goats block the tigers from being able to move. The objective of the player 2 is to capture all the tigers.\n\n### Response:\n",
    "completion": "(game \"Baghchal\" (players 2) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (hand P1) (piece \"Goat\" P1 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to))))))}) (rules (start {(place \"Tiger2\" (sites Corners)) (place \"Goat1\" (handSite P1) count:20)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))))) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P1) 0) (result P1 Loss))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on 5x5 grid including diagonals and pieces are played on the intersections of the lines. One player has four tigers, placed on the corners, and the other has up to 20 goats, placed on the board on a free space. Tigers and goats can move to an adjacent intersection along the lines on the board. Tigers may capture goats by hopping over them. The game ends when tigers have captured all of the goats or the goats block the tigers from being able to move. The objective of the player 2 is to capture all the tigers."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nAn isosceles triangle, with a line intersecting the two equal sides, another line drawn from the apex to the midpoint of this line. A line extending below the base, and another line perpendicular to this one. One player plays as the tiger, and another player as three goats. The tiger begins at the apex of the triangle, the goats on the three points on the bottom line (the two ends and the place where it intersects with the other line. Players alternate turns moving a piece to an empty adjacent spot. The tiger may capture a goat by hopping over it to an empty adjacent spot along the lines of the board. The tiger wins by capturing all of the goats; the goats win by blocking the tiger from being able to move.\n\n### Response:\n",
    "completion": "(game \"Bam Blang Beh Khla\" (players 2) (equipment {(board (add (remove (merge {(shift 0.4 -1 (scale 0.6 (rectangle 1 3))) (shift 0.2 0 (scale 0.8 2 (wedge 2))) (shift 0 -0.5 (scale 1 2.5 (wedge 2)))}) edges:{{3 8} {3 7} {3 9}}) edges:{{6 9} {4 7} {1 8}}) use:Vertex) (piece \"Tiger\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Goat\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Tiger1\" (sites Top)) (place \"Goat2\" (sites Bottom))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "An isosceles triangle, with a line intersecting the two equal sides, another line drawn from the apex to the midpoint of this line. A line extending below the base, and another line perpendicular to this one. One player plays as the tiger, and another player as three goats. The tiger begins at the apex of the triangle, the goats on the three points on the bottom line (the two ends and the place where it intersects with the other line. Players alternate turns moving a piece to an empty adjacent spot. The tiger may capture a goat by hopping over it to an empty adjacent spot along the lines of the board. The tiger wins by capturing all of the goats; the goats win by blocking the tiger from being able to move."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nAn isosceles triangle, with a line intersecting the two equal sides, another line drawn from the apex to the midpoint of this line. A line extending below the base, and another line perpendicular to this one. One player plays as the tiger, and another player as three goats. The tiger begins at the apex of the triangle, the goats on the three points on the bottom line (the two ends and the place where it intersects with the other line. Players alternate turns moving a piece to an empty adjacent spot. The tiger may capture a goat by hopping over it to an empty adjacent spot along the lines of the board. The tiger wins by capturing all of the goats; the goats win by blocking the tiger from being able to move.\n\n### Response:\n",
    "completion": "(game \"Bam Blang Beh Khla\" (players 2) (equipment {(board (add (remove (merge {(shift 0.4 -1 (scale 0.6 (rectangle 1 3))) (shift 0.2 0 (scale 0.8 2 (wedge 2))) (shift 0 -0.5 (scale 1 2.5 (wedge 2)))}) edges:{{3 8} {3 7} {3 9}}) edges:{{6 9} {4 7} {1 8}}) use:Vertex) (piece \"Tiger\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Goat\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Tiger1\" (sites Top)) (place \"Goat2\" (sites Bottom))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "An isosceles triangle, with a line intersecting the two equal sides, another line drawn from the apex to the midpoint of this line. A line extending below the base, and another line perpendicular to this one. One player plays as the tiger, and another player as three goats. The tiger begins at the apex of the triangle, the goats on the three points on the bottom line (the two ends and the place where it intersects with the other line. Players alternate turns moving a piece to an empty adjacent spot. The tiger may capture a goat by hopping over it to an empty adjacent spot along the lines of the board. The tiger wins by capturing all of the goats; the goats win by blocking the tiger from being able to move."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nAn isosceles triangle, with a line intersecting the two equal sides, another line drawn from the apex to the midpoint of this line. A line extending below the base, and another line perpendicular to this one. One player plays as the tiger, and another player as three goats. The tiger begins at the apex of the triangle, the goats on the three points on the bottom line (the two ends and the place where it intersects with the other line. Players alternate turns moving a piece to an empty adjacent spot. The tiger may capture a goat by hopping over it to an empty adjacent spot along the lines of the board. The tiger wins by capturing all of the goats; the goats win by blocking the tiger from being able to move.\n\n### Response:\n",
    "completion": "(game \"Bam Blang Beh Khla\" (players 2) (equipment {(board (add (remove (merge {(shift 0.4 -1 (scale 0.6 (rectangle 1 3))) (shift 0.2 0 (scale 0.8 2 (wedge 2))) (shift 0 -0.5 (scale 1 2.5 (wedge 2)))}) edges:{{3 8} {3 7} {3 9}}) edges:{{6 9} {4 7} {1 8}}) use:Vertex) (piece \"Tiger\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Goat\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Tiger1\" (sites Top)) (place \"Goat2\" (sites Bottom))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "An isosceles triangle, with a line intersecting the two equal sides, another line drawn from the apex to the midpoint of this line. A line extending below the base, and another line perpendicular to this one. One player plays as the tiger, and another player as three goats. The tiger begins at the apex of the triangle, the goats on the three points on the bottom line (the two ends and the place where it intersects with the other line. Players alternate turns moving a piece to an empty adjacent spot. The tiger may capture a goat by hopping over it to an empty adjacent spot along the lines of the board. The tiger wins by capturing all of the goats; the goats win by blocking the tiger from being able to move."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals in each 3x3 quadrant of the board. On one end, a square with diagonals, with one corner as the midpoint of one of the sides of the main board. On the opposite side, a triangle, with a line bisecting the base and another bisecting this line and intersecting with the other two sides of the triangle. The triangle's apex is the midpoint of the opposite side as the square. One player plays with two larger pieces, the Bulls, which start at the points where the triangle and square intersect with the main board. The other player plays with 24 smaller pieces. Eight of these begin on the points surrounding the central point of the board, the rest are in the hand. Players alternate turns. The Bulls move to an empty adjacent spot, the other player places one of the pieces from their hand onto the board. When all of these pieces are on the board, the player may move one of the pieces to an empty adjacent spot. The Bull may captured one of the smaller pieces my hopping over it onto an empty space. The goal of the Bulls is to capture all of the smaller pieces. The goal of the player with the smaller pieces is to corner the bulls so they cannot move. Doing so in the triangle and the square is a better win than cornering the Bulls on the main board.\n\n### Response:\n",
    "completion": "(game \"Bouge Shodra\" (players 2) (equipment {(board (merge (merge (shift 0 2 (square 5 diagonals:Alternating)) (wedge 3)) (rotate 45 (shift 1.5 6.2 (square 2 diagonals:Solid)))) use:Vertex) (hand P1) (piece \"Marker\" P1 (move Step (to if:(is Empty (to))))) (piece \"Bull\" P2 (or (move Step (to if:(is Empty (to)))) (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))))}) (rules (start {(place \"Bull2\" (sites {\"C3\" \"C7\"})) (place \"Marker1\" (difference (expand (sites Centre)) (centrePoint))) (place \"Marker1\" (handSite P1) count:16)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P2) (result P1 Win)) (if (no Pieces P1) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals in each 3x3 quadrant of the board. On one end, a square with diagonals, with one corner as the midpoint of one of the sides of the main board. On the opposite side, a triangle, with a line bisecting the base and another bisecting this line and intersecting with the other two sides of the triangle. The triangle's apex is the midpoint of the opposite side as the square. One player plays with two larger pieces, the Bulls, which start at the points where the triangle and square intersect with the main board. The other player plays with 24 smaller pieces. Eight of these begin on the points surrounding the central point of the board, the rest are in the hand. Players alternate turns. The Bulls move to an empty adjacent spot, the other player places one of the pieces from their hand onto the board. When all of these pieces are on the board, the player may move one of the pieces to an empty adjacent spot. The Bull may captured one of the smaller pieces my hopping over it onto an empty space. The goal of the Bulls is to capture all of the smaller pieces. The goal of the player with the smaller pieces is to corner the bulls so they cannot move. Doing so in the triangle and the square is a better win than cornering the Bulls on the main board."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals in each 3x3 quadrant of the board. On one end, a square with diagonals, with one corner as the midpoint of one of the sides of the main board. On the opposite side, a triangle, with a line bisecting the base and another bisecting this line and intersecting with the other two sides of the triangle. The triangle's apex is the midpoint of the opposite side as the square. One player plays with two larger pieces, the Bulls, which start at the points where the triangle and square intersect with the main board. The other player plays with 24 smaller pieces. Eight of these begin on the points surrounding the central point of the board, the rest are in the hand. Players alternate turns. The Bulls move to an empty adjacent spot, the other player places one of the pieces from their hand onto the board. When all of these pieces are on the board, the player may move one of the pieces to an empty adjacent spot. The Bull may captured one of the smaller pieces my hopping over it onto an empty space. The goal of the Bulls is to capture all of the smaller pieces. The goal of the player with the smaller pieces is to corner the bulls so they cannot move. Doing so in the triangle and the square is a better win than cornering the Bulls on the main board.\n\n### Response:\n",
    "completion": "(game \"Bouge Shodra\" (players 2) (equipment {(board (merge (merge (shift 0 2 (square 5 diagonals:Alternating)) (wedge 3)) (rotate 45 (shift 1.5 6.2 (square 2 diagonals:Solid)))) use:Vertex) (hand P1) (piece \"Marker\" P1 (move Step (to if:(is Empty (to))))) (piece \"Bull\" P2 (or (move Step (to if:(is Empty (to)))) (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))))}) (rules (start {(place \"Bull2\" (sites {\"C3\" \"C7\"})) (place \"Marker1\" (difference (expand (sites Centre)) (centrePoint))) (place \"Marker1\" (handSite P1) count:16)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P2) (result P1 Win)) (if (no Pieces P1) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals in each 3x3 quadrant of the board. On one end, a square with diagonals, with one corner as the midpoint of one of the sides of the main board. On the opposite side, a triangle, with a line bisecting the base and another bisecting this line and intersecting with the other two sides of the triangle. The triangle's apex is the midpoint of the opposite side as the square. One player plays with two larger pieces, the Bulls, which start at the points where the triangle and square intersect with the main board. The other player plays with 24 smaller pieces. Eight of these begin on the points surrounding the central point of the board, the rest are in the hand. Players alternate turns. The Bulls move to an empty adjacent spot, the other player places one of the pieces from their hand onto the board. When all of these pieces are on the board, the player may move one of the pieces to an empty adjacent spot. The Bull may captured one of the smaller pieces my hopping over it onto an empty space. The goal of the Bulls is to capture all of the smaller pieces. The goal of the player with the smaller pieces is to corner the bulls so they cannot move. Doing so in the triangle and the square is a better win than cornering the Bulls on the main board."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals in each 3x3 quadrant of the board. On one end, a square with diagonals, with one corner as the midpoint of one of the sides of the main board. On the opposite side, a triangle, with a line bisecting the base and another bisecting this line and intersecting with the other two sides of the triangle. The triangle's apex is the midpoint of the opposite side as the square. One player plays with two larger pieces, the Bulls, which start at the points where the triangle and square intersect with the main board. The other player plays with 24 smaller pieces. Eight of these begin on the points surrounding the central point of the board, the rest are in the hand. Players alternate turns. The Bulls move to an empty adjacent spot, the other player places one of the pieces from their hand onto the board. When all of these pieces are on the board, the player may move one of the pieces to an empty adjacent spot. The Bull may captured one of the smaller pieces my hopping over it onto an empty space. The goal of the Bulls is to capture all of the smaller pieces. The goal of the player with the smaller pieces is to corner the bulls so they cannot move. Doing so in the triangle and the square is a better win than cornering the Bulls on the main board.\n\n### Response:\n",
    "completion": "(game \"Bouge Shodra\" (players 2) (equipment {(board (merge (merge (shift 0 2 (square 5 diagonals:Alternating)) (wedge 3)) (rotate 45 (shift 1.5 6.2 (square 2 diagonals:Solid)))) use:Vertex) (hand P1) (piece \"Marker\" P1 (move Step (to if:(is Empty (to))))) (piece \"Bull\" P2 (or (move Step (to if:(is Empty (to)))) (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))))}) (rules (start {(place \"Bull2\" (sites {\"C3\" \"C7\"})) (place \"Marker1\" (difference (expand (sites Centre)) (centrePoint))) (place \"Marker1\" (handSite P1) count:16)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P2) (result P1 Win)) (if (no Pieces P1) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals in each 3x3 quadrant of the board. On one end, a square with diagonals, with one corner as the midpoint of one of the sides of the main board. On the opposite side, a triangle, with a line bisecting the base and another bisecting this line and intersecting with the other two sides of the triangle. The triangle's apex is the midpoint of the opposite side as the square. One player plays with two larger pieces, the Bulls, which start at the points where the triangle and square intersect with the main board. The other player plays with 24 smaller pieces. Eight of these begin on the points surrounding the central point of the board, the rest are in the hand. Players alternate turns. The Bulls move to an empty adjacent spot, the other player places one of the pieces from their hand onto the board. When all of these pieces are on the board, the player may move one of the pieces to an empty adjacent spot. The Bull may captured one of the smaller pieces my hopping over it onto an empty space. The goal of the Bulls is to capture all of the smaller pieces. The goal of the player with the smaller pieces is to corner the bulls so they cannot move. Doing so in the triangle and the square is a better win than cornering the Bulls on the main board."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nOne player is the rabbit, and the other player plays with twelve other pieces. They may also play with either ten or eleven pieces instead of twelve. The pieces move along the lines. The goal is to corner the rabbit so that it cannot move. The rabbit may hop over the other pieces to capture them. The rabbit wins by reducing the opponent to nine pieces. Played on a Alquerque Board. The hare can jump to capture.\n\n### Response:\n",
    "completion": "(game \"Cercar La Liebre\" (players 2) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (piece \"Counter\" P1 (move Step (to if:(is Empty (to))))) (piece \"Hare\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (if (is Prev Mover) (move Pass) (move Step (to if:(is Empty (to)))))))}) (rules (start {(place \"Counter1\" (union {(expand (sites Bottom)) (sites {\"A3\" \"E3\"})})) (place \"Hare2\" (centrePoint))}) (play (forEach Piece)) (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P1) 9) (result P1 Loss))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "One player is the rabbit, and the other player plays with twelve other pieces. They may also play with either ten or eleven pieces instead of twelve. The pieces move along the lines. The goal is to corner the rabbit so that it cannot move. The rabbit may hop over the other pieces to capture them. The rabbit wins by reducing the opponent to nine pieces. Played on a Alquerque Board. The hare can jump to capture."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nOne player is the rabbit, and the other player plays with twelve other pieces. They may also play with either ten or eleven pieces instead of twelve. The pieces move along the lines. The goal is to corner the rabbit so that it cannot move. The rabbit may hop over the other pieces to capture them. The rabbit wins by reducing the opponent to nine pieces. Played on a Alquerque Board with less diagonal. The hare can jump a sequence of pieces to capture.\n\n### Response:\n",
    "completion": "(game \"Cercar La Liebre\" (players 2) (equipment {(board (remove (rectangle 5 5 diagonals:Alternating) edges:{{{2 0} {1 1}} {{0 2} {1 1}} {{0 2} {1 3}} {{1 3} {2 4}} {{2 0} {3 1}} {{3 1} {4 2}} {{4 2} {3 3}} {{3 3} {2 4}}}) use:Vertex) (piece \"Counter\" P1 (move Step (to if:(is Empty (to))))) (piece \"Hare\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain)))) (if (is Prev Mover) (move Pass) (move Step (to if:(is Empty (to)))))))}) (rules (start {(place \"Counter1\" (union {(expand (sites Bottom)) (sites {\"A3\" \"E3\"})})) (place \"Hare2\" (centrePoint))}) (play (forEach Piece)) (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P1) 9) (result P1 Loss))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "One player is the rabbit, and the other player plays with twelve other pieces. They may also play with either ten or eleven pieces instead of twelve. The pieces move along the lines. The goal is to corner the rabbit so that it cannot move. The rabbit may hop over the other pieces to capture them. The rabbit wins by reducing the opponent to nine pieces. Played on a Alquerque Board with less diagonal. The hare can jump a sequence of pieces to capture."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nOne player is the rabbit, and the other player plays with twelve other pieces. They may also play with either ten or eleven pieces instead of twelve. The pieces move along the lines. The goal is to corner the rabbit so that it cannot move. The rabbit may hop over the other pieces to capture them. The rabbit wins by reducing the opponent to nine pieces. Played on a Alquerque Board with no diagonal. The hare can jump to capture.\n\n### Response:\n",
    "completion": "(game \"Cercar La Liebre\" (players 2) (equipment {(board (square 5) use:Vertex) (piece \"Counter\" P1 (move Step (to if:(is Empty (to))))) (piece \"Hare\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (if (is Prev Mover) (move Pass) (move Step (to if:(is Empty (to)))))))}) (rules (start {(place \"Counter1\" (union {(expand (sites Bottom)) (sites {\"A3\" \"E3\"})})) (place \"Hare2\" (centrePoint))}) (play (forEach Piece)) (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P1) 9) (result P1 Loss))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "One player is the rabbit, and the other player plays with twelve other pieces. They may also play with either ten or eleven pieces instead of twelve. The pieces move along the lines. The goal is to corner the rabbit so that it cannot move. The rabbit may hop over the other pieces to capture them. The rabbit wins by reducing the opponent to nine pieces. Played on a Alquerque Board with no diagonal. The hare can jump to capture."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed with three \"leopards\" and fifteen \"dogs.\" The pieces are placed on the intersections of the lines, and move along the lines to the next intersection. The game starts with the leopards on the board, but in the beginning the player controlling the dogs places one dog on an intersection until they are all on the board. After this, the dogs move in the same manner as the leopards. The leopard can hop over a dog as in draughts, capturing it. The leopard wins the game if it captures more than half of the dogs, the dogs win if they block the leopard from being able to move. Played on the normal board.\n\n### Response:\n",
    "completion": "(game \"Demala Diviyan Keliya\" (players 2) (equipment {(board (add (remove (merge (shift 0 2 (scale 8 2 (rectangle 3 2))) (scale 1 2 (wedge 5 4))) edges:{{0 1} {2 3} {4 5}}) edges:{{0 15} {18 1} {2 11} {14 3} {4 7} {10 5}}) use:Vertex) (hand P2) (piece \"Tiger\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Tiger1\" {\"H5\" \"G4\" \"I4\"}) (place \"Dog2\" (handSite P2) count:15)}) phases:{(phase \"Placement\" P2 (play (move (from (handSite P2)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)) (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P2) 7) (result P2 Loss))}))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played with three \"leopards\" and fifteen \"dogs.\" The pieces are placed on the intersections of the lines, and move along the lines to the next intersection. The game starts with the leopards on the board, but in the beginning the player controlling the dogs places one dog on an intersection until they are all on the board. After this, the dogs move in the same manner as the leopards. The leopard can hop over a dog as in draughts, capturing it. The leopard wins the game if it captures more than half of the dogs, the dogs win if they block the leopard from being able to move. Played on the normal board."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed with three \"leopards\" and fifteen \"dogs.\" The pieces are placed on the intersections of the lines, and move along the lines to the next intersection. The game starts with the leopards on the board, but in the beginning the player controlling the dogs places one dog on an intersection until they are all on the board. After this, the dogs move in the same manner as the leopards. The leopard can hop over a dog as in draughts, capturing it. The leopard wins the game if it captures more than half of the dogs, the dogs win if they block the leopard from being able to move. Played on a larger Board.\n\n### Response:\n",
    "completion": "(game \"Demala Diviyan Keliya\" (players 2) (equipment {(board (scale 1.4 1 (remove (scale 1 2 (wedge 5 8)) edges:{{0 1} {0 2} {0 7} {0 8}} vertices:{32 31 26 25})) use:Vertex) (hand P2) (piece \"Tiger\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Tiger1\" {\"M4\" \"O4\" \"N5\"}) (place \"Dog2\" (handSite P2) count:15)}) phases:{(phase \"Placement\" P2 (play (move (from (handSite P2)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)) (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P2) 7) (result P2 Loss))}))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played with three \"leopards\" and fifteen \"dogs.\" The pieces are placed on the intersections of the lines, and move along the lines to the next intersection. The game starts with the leopards on the board, but in the beginning the player controlling the dogs places one dog on an intersection until they are all on the board. After this, the dogs move in the same manner as the leopards. The leopard can hop over a dog as in draughts, capturing it. The leopard wins the game if it captures more than half of the dogs, the dogs win if they block the leopard from being able to move. Played on a larger Board."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed with three \"leopards\" and fifteen \"dogs.\" The pieces are placed on the intersections of the lines, and move along the lines to the next intersection. The game starts with the leopards on the board, but in the beginning the player controlling the dogs places one dog on an intersection until they are all on the board. After this, the dogs move in the same manner as the leopards. The leopard can hop over a dog as in draughts, capturing it. The leopard wins the game if it captures more than half of the dogs, the dogs win if they block the leopard from being able to move. Played on the normal board.\n\n### Response:\n",
    "completion": "(game \"Demala Diviyan Keliya\" (players 2) (equipment {(board (add (remove (merge (shift 0 2 (scale 8 2 (rectangle 3 2))) (scale 1 2 (wedge 5 4))) edges:{{0 1} {2 3} {4 5}}) edges:{{0 15} {18 1} {2 11} {14 3} {4 7} {10 5}}) use:Vertex) (hand P2) (piece \"Tiger\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Tiger1\" {\"H5\" \"G4\" \"I4\"}) (place \"Dog2\" (handSite P2) count:15)}) phases:{(phase \"Placement\" P2 (play (move (from (handSite P2)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)) (end {(if (no Moves Next) (result Next Loss)) (if (<= (count Pieces P2) 7) (result P2 Loss))}))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played with three \"leopards\" and fifteen \"dogs.\" The pieces are placed on the intersections of the lines, and move along the lines to the next intersection. The game starts with the leopards on the board, but in the beginning the player controlling the dogs places one dog on an intersection until they are all on the board. After this, the dogs move in the same manner as the leopards. The leopard can hop over a dog as in draughts, capturing it. The leopard wins the game if it captures more than half of the dogs, the dogs win if they block the leopard from being able to move. Played on the normal board."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nOne player has two leopards, the other has 24 cows. Play begins by each player taking turns to place their pieces, and then can move to one adjacent intersection. Leopards capture cows by hopping over them. Leopards win by capturing all the cows, cows win by blocking the leopards from moving. The leopard can jump to capture.\n\n### Response:\n",
    "completion": "(game \"Diviyan Keliya\" (players 2) (equipment {(board (merge {(shift 2 2 (square 5 diagonals:Alternating)) (shift 2 0 (wedge 3)) (shift 5 3 (rotate 90 (wedge 3))) (shift 2 6 (rotate 180 (wedge 3))) (shift -1 3 (rotate 270 (wedge 3)))}) use:Vertex) (hand Each) (piece \"Leopard\" P1) (piece \"Cow\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Leopard1\" \"Hand1\" count:2) (place \"Cow2\" \"Hand2\" count:24)}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (sites Empty)))) {(nextPhase P1 (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"MovementP1\") (nextPhase P2 (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site)))) \"MovementP2\")}) (phase \"MovementP1\" P1 (play (forEach Piece \"Leopard\" (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))))) (phase \"MovementP2\" P2 (play (forEach Piece)))} (end (if (no Moves Next) (result Next Loss)))))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "One player has two leopards, the other has 24 cows. Play begins by each player taking turns to place their pieces, and then can move to one adjacent intersection. Leopards capture cows by hopping over them. Leopards win by capturing all the cows, cows win by blocking the leopards from moving. The leopard can jump to capture."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nOne player has two leopards, the other has 24 cows. Play begins by each player taking turns to place their pieces, and then can move to one adjacent intersection. Leopards capture cows by hopping over them. Leopards win by capturing all the cows, cows win by blocking the leopards from moving. The leopard can jump a sequence of pieces to capture. It is also forced to capture.\n\n### Response:\n",
    "completion": "(game \"Diviyan Keliya\" (players 2) (equipment {(board (merge {(shift 2 2 (square 5 diagonals:Alternating)) (shift 2 0 (wedge 3)) (shift 5 3 (rotate 90 (wedge 3))) (shift 2 6 (rotate 180 (wedge 3))) (shift -1 3 (rotate 270 (wedge 3)))}) use:Vertex) (hand Each) (piece \"Leopard\" P1) (piece \"Cow\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Leopard1\" \"Hand1\" count:2) (place \"Cow2\" \"Hand2\" count:24)}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (sites Empty)))) {(nextPhase P1 (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"MovementP1\") (nextPhase P2 (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site)))) \"MovementP2\")}) (phase \"MovementP1\" P1 (play (if (is Prev Mover) (move Hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain)))) (priority {(forEach Piece \"Leopard\" (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain))))) (forEach Piece \"Leopard\" (move Step (to if:(is Empty (to)))))})))) (phase \"MovementP2\" P2 (play (forEach Piece)))} (end (if (no Moves Next) (result Next Loss)))))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "One player has two leopards, the other has 24 cows. Play begins by each player taking turns to place their pieces, and then can move to one adjacent intersection. Leopards capture cows by hopping over them. Leopards win by capturing all the cows, cows win by blocking the leopards from moving. The leopard can jump a sequence of pieces to capture. It is also forced to capture."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nOne player has two leopards, the other has 24 cows. Play begins by each player taking turns to place their pieces, and then can move to one adjacent intersection. Leopards capture cows by hopping over them. Leopards win by capturing all the cows, cows win by blocking the leopards from moving. The leopard can jump to capture.\n\n### Response:\n",
    "completion": "(game \"Diviyan Keliya\" (players 2) (equipment {(board (merge {(shift 2 2 (square 5 diagonals:Alternating)) (shift 2 0 (wedge 3)) (shift 5 3 (rotate 90 (wedge 3))) (shift 2 6 (rotate 180 (wedge 3))) (shift -1 3 (rotate 270 (wedge 3)))}) use:Vertex) (hand Each) (piece \"Leopard\" P1) (piece \"Cow\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Leopard1\" \"Hand1\" count:2) (place \"Cow2\" \"Hand2\" count:24)}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (sites Empty)))) {(nextPhase P1 (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"MovementP1\") (nextPhase P2 (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site)))) \"MovementP2\")}) (phase \"MovementP1\" P1 (play (forEach Piece \"Leopard\" (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))))) (phase \"MovementP2\" P2 (play (forEach Piece)))} (end (if (no Moves Next) (result Next Loss)))))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "One player has two leopards, the other has 24 cows. Play begins by each player taking turns to place their pieces, and then can move to one adjacent intersection. Leopards capture cows by hopping over them. Leopards win by capturing all the cows, cows win by blocking the leopards from moving. The leopard can jump to capture."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines with diagonals drawn in the quadrants. One player plays as one hunter, placed in the central spot. The other player plays as twelve birds, which are placed in the two rows closest to the player and the two spots on the right hand side in the central row. The hunter may move in any direction along the lines of the board. The hunter may capture birds by hopping over them to an empty spot on the opposite side along the lines of the board. The birds may move forward orthogonally or diagonally. The birds win by blocking the hunter from being able to move; the hunter wins by capturing all of the birds or when it is no longer possible for the birds to capture the hunter.\n\n### Response:\n",
    "completion": "(game \"El Cazador\" (players {(player S) (player N)}) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (piece \"Human\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Hen\" P2 (move Step (directions {Rightward Leftward Forwards}) (to if:(is Empty (to)))))}) (rules (start {(place \"Human1\" (centrePoint)) (place \"Hen2\" (union {(expand (sites Bottom)) (sites {\"D3\" \"E3\"})}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines with diagonals drawn in the quadrants. One player plays as one hunter, placed in the central spot. The other player plays as twelve birds, which are placed in the two rows closest to the player and the two spots on the right hand side in the central row. The hunter may move in any direction along the lines of the board. The hunter may capture birds by hopping over them to an empty spot on the opposite side along the lines of the board. The birds may move forward orthogonally or diagonally. The birds win by blocking the hunter from being able to move; the hunter wins by capturing all of the birds or when it is no longer possible for the birds to capture the hunter."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines with diagonals drawn in the quadrants. One player plays as one hunter, placed in the central spot. The other player plays as twelve birds, which are placed in the two rows closest to the player and the two spots on the right hand side in the central row. The hunter may move in any direction along the lines of the board. The hunter may capture birds by hopping over them to an empty spot on the opposite side along the lines of the board. The birds may move forward orthogonally or diagonally. The birds win by blocking the hunter from being able to move; the hunter wins by capturing all of the birds or when it is no longer possible for the birds to capture the hunter.\n\n### Response:\n",
    "completion": "(game \"El Cazador\" (players {(player S) (player N)}) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (piece \"Human\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Hen\" P2 (move Step (directions {Rightward Leftward Forwards}) (to if:(is Empty (to)))))}) (rules (start {(place \"Human1\" (centrePoint)) (place \"Hen2\" (union {(expand (sites Bottom)) (sites {\"D3\" \"E3\"})}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines with diagonals drawn in the quadrants. One player plays as one hunter, placed in the central spot. The other player plays as twelve birds, which are placed in the two rows closest to the player and the two spots on the right hand side in the central row. The hunter may move in any direction along the lines of the board. The hunter may capture birds by hopping over them to an empty spot on the opposite side along the lines of the board. The birds may move forward orthogonally or diagonally. The birds win by blocking the hunter from being able to move; the hunter wins by capturing all of the birds or when it is no longer possible for the birds to capture the hunter."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines with diagonals drawn in the quadrants. One player plays as one hunter, placed in the central spot. The other player plays as twelve birds, which are placed in the two rows closest to the player and the two spots on the right hand side in the central row. The hunter may move in any direction along the lines of the board. The hunter may capture birds by hopping over them to an empty spot on the opposite side along the lines of the board. The birds may move forward orthogonally or diagonally. The birds win by blocking the hunter from being able to move; the hunter wins by capturing all of the birds or when it is no longer possible for the birds to capture the hunter.\n\n### Response:\n",
    "completion": "(game \"El Cazador\" (players {(player S) (player N)}) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (piece \"Human\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Hen\" P2 (move Step (directions {Rightward Leftward Forwards}) (to if:(is Empty (to)))))}) (rules (start {(place \"Human1\" (centrePoint)) (place \"Hen2\" (union {(expand (sites Bottom)) (sites {\"D3\" \"E3\"})}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines with diagonals drawn in the quadrants. One player plays as one hunter, placed in the central spot. The other player plays as twelve birds, which are placed in the two rows closest to the player and the two spots on the right hand side in the central row. The hunter may move in any direction along the lines of the board. The hunter may capture birds by hopping over them to an empty spot on the opposite side along the lines of the board. The birds may move forward orthogonally or diagonally. The birds win by blocking the hunter from being able to move; the hunter wins by capturing all of the birds or when it is no longer possible for the birds to capture the hunter."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals drawn in the quadrants. One player plays as one dog, which is a large stone, and the other as twelve goats, which are smaller stones. The goats begin on the two rows closest to the player to which they belong, and on the right hand spots in the central row. The dog begins in the central space. The dog moves first. The dog may move in any direction along the lines of the board. It may capture a goat by hopping over it to an empty adjacent spot on the opposite side of the goat, according to the lines of the board. Multiple captures are allowed. The goats move one space forward orthogonally or diagonally, or sideways, along the lines of the board. When all of the goats are unable to move forward anymore and all are are in spaces being equivalent to the starting position on the opposite side of the board, they may then commence moving in the opposite direction toward their original starting position, but not backwards with respect to this direction. The dog wins by capturing all the goats; the goats win by blocking the dog from being able to move.\n\n### Response:\n",
    "completion": "(game \"El Perro\" (players 2) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (piece \"Goat\" P2 (move Step (if (= (value Player Mover) 1) (directions {S SE SW E W}) (directions {N NE NW E W})) (to if:(is Empty (to))))) (piece \"Dog\" P1 (or (move Hop (from (from)) Adjacent (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))) (move Step (to if:(is Empty (to))))))}) (rules (start {(place \"Goat2\" (union (intersection (union (sites Left) (sites Right)) (sites Row 2)) (expand (sites Bottom)))) (place \"Dog1\" (sites Centre))}) (play (if (is Prev Mover) (or (move Hop (from (last To)) Adjacent (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))) (move Pass)) (forEach Piece) (then (if (not (can Move (forEach Piece (move Step (if (= (value Player P2) 1) (directions {S SE SW}) (directions {N NE NW})) (to if:(is Empty (to)))) P2))) (set Value P2 (if (= (value Player P2) 1) 0 1)))))) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals drawn in the quadrants. One player plays as one dog, which is a large stone, and the other as twelve goats, which are smaller stones. The goats begin on the two rows closest to the player to which they belong, and on the right hand spots in the central row. The dog begins in the central space. The dog moves first. The dog may move in any direction along the lines of the board. It may capture a goat by hopping over it to an empty adjacent spot on the opposite side of the goat, according to the lines of the board. Multiple captures are allowed. The goats move one space forward orthogonally or diagonally, or sideways, along the lines of the board. When all of the goats are unable to move forward anymore and all are are in spaces being equivalent to the starting position on the opposite side of the board, they may then commence moving in the opposite direction toward their original starting position, but not backwards with respect to this direction. The dog wins by capturing all the goats; the goats win by blocking the dog from being able to move."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals drawn in the quadrants. One player plays as one dog, which is a large stone, and the other as twelve goats, which are smaller stones. The goats begin on the two rows closest to the player to which they belong, and on the right hand spots in the central row. The dog begins in the central space. The dog moves first. The dog may move in any direction along the lines of the board. It may capture a goat by hopping over it to an empty adjacent spot on the opposite side of the goat, according to the lines of the board. Multiple captures are allowed. The goats move one space forward orthogonally or diagonally, or sideways, along the lines of the board. When all of the goats are unable to move forward anymore and all are are in spaces being equivalent to the starting position on the opposite side of the board, they may then commence moving in the opposite direction toward their original starting position, but not backwards with respect to this direction. The dog wins by capturing all the goats; the goats win by blocking the dog from being able to move.\n\n### Response:\n",
    "completion": "(game \"El Perro\" (players 2) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (piece \"Goat\" P2 (move Step (if (= (value Player Mover) 1) (directions {S SE SW E W}) (directions {N NE NW E W})) (to if:(is Empty (to))))) (piece \"Dog\" P1 (or (move Hop (from (from)) Adjacent (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))) (move Step (to if:(is Empty (to))))))}) (rules (start {(place \"Goat2\" (union (intersection (union (sites Left) (sites Right)) (sites Row 2)) (expand (sites Bottom)))) (place \"Dog1\" (sites Centre))}) (play (if (is Prev Mover) (or (move Hop (from (last To)) Adjacent (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))) (move Pass)) (forEach Piece) (then (if (not (can Move (forEach Piece (move Step (if (= (value Player P2) 1) (directions {S SE SW}) (directions {N NE NW})) (to if:(is Empty (to)))) P2))) (set Value P2 (if (= (value Player P2) 1) 0 1)))))) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals drawn in the quadrants. One player plays as one dog, which is a large stone, and the other as twelve goats, which are smaller stones. The goats begin on the two rows closest to the player to which they belong, and on the right hand spots in the central row. The dog begins in the central space. The dog moves first. The dog may move in any direction along the lines of the board. It may capture a goat by hopping over it to an empty adjacent spot on the opposite side of the goat, according to the lines of the board. Multiple captures are allowed. The goats move one space forward orthogonally or diagonally, or sideways, along the lines of the board. When all of the goats are unable to move forward anymore and all are are in spaces being equivalent to the starting position on the opposite side of the board, they may then commence moving in the opposite direction toward their original starting position, but not backwards with respect to this direction. The dog wins by capturing all the goats; the goats win by blocking the dog from being able to move."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals drawn in the quadrants. One player plays as one dog, which is a large stone, and the other as twelve goats, which are smaller stones. The goats begin on the two rows closest to the player to which they belong, and on the right hand spots in the central row. The dog begins in the central space. The dog moves first. The dog may move in any direction along the lines of the board. It may capture a goat by hopping over it to an empty adjacent spot on the opposite side of the goat, according to the lines of the board. Multiple captures are allowed. The goats move one space forward orthogonally or diagonally, or sideways, along the lines of the board. When all of the goats are unable to move forward anymore and all are are in spaces being equivalent to the starting position on the opposite side of the board, they may then commence moving in the opposite direction toward their original starting position, but not backwards with respect to this direction. The dog wins by capturing all the goats; the goats win by blocking the dog from being able to move.\n\n### Response:\n",
    "completion": "(game \"El Perro\" (players 2) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (piece \"Goat\" P2 (move Step (if (= (value Player Mover) 1) (directions {S SE SW E W}) (directions {N NE NW E W})) (to if:(is Empty (to))))) (piece \"Dog\" P1 (or (move Hop (from (from)) Adjacent (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))) (move Step (to if:(is Empty (to))))))}) (rules (start {(place \"Goat2\" (union (intersection (union (sites Left) (sites Right)) (sites Row 2)) (expand (sites Bottom)))) (place \"Dog1\" (sites Centre))}) (play (if (is Prev Mover) (or (move Hop (from (last To)) Adjacent (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (move Hop (from (last To)) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (moveAgain)))) (move Pass)) (forEach Piece) (then (if (not (can Move (forEach Piece (move Step (if (= (value Player P2) 1) (directions {S SE SW}) (directions {N NE NW})) (to if:(is Empty (to)))) P2))) (set Value P2 (if (= (value Player P2) 1) 0 1)))))) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals drawn in the quadrants. One player plays as one dog, which is a large stone, and the other as twelve goats, which are smaller stones. The goats begin on the two rows closest to the player to which they belong, and on the right hand spots in the central row. The dog begins in the central space. The dog moves first. The dog may move in any direction along the lines of the board. It may capture a goat by hopping over it to an empty adjacent spot on the opposite side of the goat, according to the lines of the board. Multiple captures are allowed. The goats move one space forward orthogonally or diagonally, or sideways, along the lines of the board. When all of the goats are unable to move forward anymore and all are are in spaces being equivalent to the starting position on the opposite side of the board, they may then commence moving in the opposite direction toward their original starting position, but not backwards with respect to this direction. The dog wins by capturing all the goats; the goats win by blocking the dog from being able to move."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nFive squares which are each divided with lines connecting the midpoints of their sides and diagonals. The five squares are arranged in a cross-shaped board. One player plays as two foxes the other as twenty hens. The hens begin on the twenty spaces on one half of the board, the foxes on the bottom two corners of the square on the opposite arm of the cross. The foxes may move in any direction, and hop over a hen to an empty space immediately adjacent on the opposite side of the hen along the lines of the board to capture. The hens may not move backward. The foxes win by capturing all the hens, the hens win by occupying all of the spaces in the square of the arm of the cross opposite from where they began.\n\n### Response:\n",
    "completion": "(game \"El Zorro\" (players {(player N) (player S)}) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Hen\" P2 (move Step (directions {Rightward Leftward Forwards}) (to if:(is Empty (to)))))}) (rules (start {(place \"Hen2\" (union (sites Top) (expand (sites Row 4)))) (place \"Fox1\" (intersection (union (sites Column 4) (sites Column 2)) (sites Bottom)))}) (play (forEach Piece)) (end {(if (all Sites (expand (sites Bottom) steps:2) if:(= (who at:(site)) P2)) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Five squares which are each divided with lines connecting the midpoints of their sides and diagonals. The five squares are arranged in a cross-shaped board. One player plays as two foxes the other as twenty hens. The hens begin on the twenty spaces on one half of the board, the foxes on the bottom two corners of the square on the opposite arm of the cross. The foxes may move in any direction, and hop over a hen to an empty space immediately adjacent on the opposite side of the hen along the lines of the board to capture. The hens may not move backward. The foxes win by capturing all the hens, the hens win by occupying all of the spaces in the square of the arm of the cross opposite from where they began."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nFive squares which are each divided with lines connecting the midpoints of their sides and diagonals. The five squares are arranged in a cross-shaped board. One player plays as two foxes the other as twenty hens. The hens begin on the twenty spaces on one half of the board, the foxes on the bottom two corners of the square on the opposite arm of the cross. The foxes may move in any direction, and hop over a hen to an empty space immediately adjacent on the opposite side of the hen along the lines of the board to capture. The hens may not move backward. The foxes win by capturing all the hens, the hens win by occupying all of the spaces in the square of the arm of the cross opposite from where they began.\n\n### Response:\n",
    "completion": "(game \"El Zorro\" (players {(player N) (player S)}) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Hen\" P2 (move Step (directions {Rightward Leftward Forwards}) (to if:(is Empty (to)))))}) (rules (start {(place \"Hen2\" (union (sites Top) (expand (sites Row 4)))) (place \"Fox1\" (intersection (union (sites Column 4) (sites Column 2)) (sites Bottom)))}) (play (forEach Piece)) (end {(if (all Sites (expand (sites Bottom) steps:2) if:(= (who at:(site)) P2)) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Five squares which are each divided with lines connecting the midpoints of their sides and diagonals. The five squares are arranged in a cross-shaped board. One player plays as two foxes the other as twenty hens. The hens begin on the twenty spaces on one half of the board, the foxes on the bottom two corners of the square on the opposite arm of the cross. The foxes may move in any direction, and hop over a hen to an empty space immediately adjacent on the opposite side of the hen along the lines of the board to capture. The hens may not move backward. The foxes win by capturing all the hens, the hens win by occupying all of the spaces in the square of the arm of the cross opposite from where they began."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nFive squares which are each divided with lines connecting the midpoints of their sides and diagonals. The five squares are arranged in a cross-shaped board. One player plays as two foxes the other as twenty hens. The hens begin on the twenty spaces on one half of the board, the foxes on the bottom two corners of the square on the opposite arm of the cross. The foxes may move in any direction, and hop over a hen to an empty space immediately adjacent on the opposite side of the hen along the lines of the board to capture. The hens may not move backward. The foxes win by capturing all the hens, the hens win by occupying all of the spaces in the square of the arm of the cross opposite from where they began.\n\n### Response:\n",
    "completion": "(game \"El Zorro\" (players {(player N) (player S)}) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Hen\" P2 (move Step (directions {Rightward Leftward Forwards}) (to if:(is Empty (to)))))}) (rules (start {(place \"Hen2\" (union (sites Top) (expand (sites Row 4)))) (place \"Fox1\" (intersection (union (sites Column 4) (sites Column 2)) (sites Bottom)))}) (play (forEach Piece)) (end {(if (all Sites (expand (sites Bottom) steps:2) if:(= (who at:(site)) P2)) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Five squares which are each divided with lines connecting the midpoints of their sides and diagonals. The five squares are arranged in a cross-shaped board. One player plays as two foxes the other as twenty hens. The hens begin on the twenty spaces on one half of the board, the foxes on the bottom two corners of the square on the opposite arm of the cross. The foxes may move in any direction, and hop over a hen to an empty space immediately adjacent on the opposite side of the hen along the lines of the board to capture. The hens may not move backward. The foxes win by capturing all the hens, the hens win by occupying all of the spaces in the square of the arm of the cross opposite from where they began."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThe game is played on a cruciform board adapted from an Alquerque board. One player plays as the fox, the other as the geese. The geese begin in a set starting position; the person playing as the fox may choose any available spot to place the fox as their first move. Players move as in Alquerque, but only the fox can hop to capture. The goal of the geese is to block the fox from being able to move; the fox's goal is to capture all of the geese. The game starts with 13 geese.\n\n### Response:\n",
    "completion": "(game \"Fox and Geese\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (hand P1) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Goose\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Goose2\" (union (expand (sites Bottom)) (sites Row 2))) (place \"Fox1\" (handSite P1))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves Next) (result Next Loss)) (if (no Pieces P2) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "The game is played on a cruciform board adapted from an Alquerque board. One player plays as the fox, the other as the geese. The geese begin in a set starting position; the person playing as the fox may choose any available spot to place the fox as their first move. Players move as in Alquerque, but only the fox can hop to capture. The goal of the geese is to block the fox from being able to move; the fox's goal is to capture all of the geese. The game starts with 13 geese."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThe game is played on a cruciform board adapted from an Alquerque board. One player plays as the fox, the other as the geese. The geese begin in a set starting position; the person playing as the fox may choose any available spot to place the fox as their first move. Players move as in Alquerque, but only the fox can hop to capture. The goal of the geese is to block the fox from being able to move; the fox's goal is to capture all of the geese. The game starts with 15 geese.\n\n### Response:\n",
    "completion": "(game \"Fox and Geese\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (hand P1) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Goose\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Goose2\" (union {(expand (sites Bottom)) (sites Row 2) (sites {\"A4\" \"G4\"})})) (place \"Fox1\" (handSite P1))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves Next) (result Next Loss)) (if (no Pieces P2) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "The game is played on a cruciform board adapted from an Alquerque board. One player plays as the fox, the other as the geese. The geese begin in a set starting position; the person playing as the fox may choose any available spot to place the fox as their first move. Players move as in Alquerque, but only the fox can hop to capture. The goal of the geese is to block the fox from being able to move; the fox's goal is to capture all of the geese. The game starts with 15 geese."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThe game is played on a cruciform board adapted from an Alquerque board. One player plays as the fox, the other as the geese. The geese begin in a set starting position; the person playing as the fox may choose any available spot to place the fox as their first move. Players move as in Alquerque, but only the fox can hop to capture. The goal of the geese is to block the fox from being able to move; the fox's goal is to capture all of the geese. The game starts with 17 geese.\n\n### Response:\n",
    "completion": "(game \"Fox and Geese\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (hand P1) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Goose\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Goose2\" (union {(expand (sites Bottom)) (sites Row 2) (sites {\"A4\" \"G4\" \"A5\" \"G5\"})})) (place \"Fox1\" (handSite P1))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves Next) (result Next Loss)) (if (no Pieces P2) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "The game is played on a cruciform board adapted from an Alquerque board. One player plays as the fox, the other as the geese. The geese begin in a set starting position; the person playing as the fox may choose any available spot to place the fox as their first move. Players move as in Alquerque, but only the fox can hop to capture. The goal of the geese is to block the fox from being able to move; the fox's goal is to capture all of the geese. The game starts with 17 geese."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n7x7 board, with an X in each corner space, the middle space along each side, and the central space. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces one space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces, or if it is in the corner and there are two opponent's pieces blocking it from moving. Capturing cannot happen in the placement phase. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them.\n\n### Response:\n",
    "completion": "(game \"Gala (Buginese)\" (players 2) (equipment {(board (square 7)) (piece \"Marker\" Each (move Step Orthogonal (to if:(is Empty (to))) (then (and (custodial (from (last To)) Orthogonal (between (max 1) if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Friend (who at:(to))))) (surround (from (last To)) Orthogonal (between if:(and (is Enemy (who at:(between))) (is In (between) (sites Corners))) (apply (remove (between)))) (to if:(is Friend (who at:(to))))))))) (hand Each) (regions \"HalfBoard\" P1 (expand (sites Bottom) steps:3)) (regions \"HalfBoard\" P2 (expand (sites Top) steps:3))}) (rules (start {(place \"Marker1\" (handSite P1) count:13) (place \"Marker2\" (handSite P2) count:10)}) phases:{(phase \"CentrePlacing\" P1 (play (move (from (handSite P1)) (to (centrePoint)))) (nextPhase \"Placement\")) (phase \"Placement\" P2 (play (if (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site))))) (move (from (handSite Mover)) (to (intersection (sites Empty) (sites Mover)))) (move Pass))) (nextPhase (and (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site))))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)) (end {(if (no Moves P2) (result P1 Win)) (if (< (count Pieces P1) 2) (result P2 Win))}))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "7x7 board, with an X in each corner space, the middle space along each side, and the central space. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces one space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces, or if it is in the corner and there are two opponent's pieces blocking it from moving. Capturing cannot happen in the placement phase. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n7x7 board, with an X in each corner space, the middle space along each side, and the central space. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces one space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces, or if it is in the corner and there are two opponent's pieces blocking it from moving. Capturing cannot happen in the placement phase. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them.\n\n### Response:\n",
    "completion": "(game \"Gala (Buginese)\" (players 2) (equipment {(board (square 7)) (piece \"Marker\" Each (move Step Orthogonal (to if:(is Empty (to))) (then (and (custodial (from (last To)) Orthogonal (between (max 1) if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Friend (who at:(to))))) (surround (from (last To)) Orthogonal (between if:(and (is Enemy (who at:(between))) (is In (between) (sites Corners))) (apply (remove (between)))) (to if:(is Friend (who at:(to))))))))) (hand Each) (regions \"HalfBoard\" P1 (expand (sites Bottom) steps:3)) (regions \"HalfBoard\" P2 (expand (sites Top) steps:3))}) (rules (start {(place \"Marker1\" (handSite P1) count:13) (place \"Marker2\" (handSite P2) count:10)}) phases:{(phase \"CentrePlacing\" P1 (play (move (from (handSite P1)) (to (centrePoint)))) (nextPhase \"Placement\")) (phase \"Placement\" P2 (play (if (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site))))) (move (from (handSite Mover)) (to (intersection (sites Empty) (sites Mover)))) (move Pass))) (nextPhase (and (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site))))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)) (end {(if (no Moves P2) (result P1 Win)) (if (< (count Pieces P1) 2) (result P2 Win))}))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "7x7 board, with an X in each corner space, the middle space along each side, and the central space. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces one space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces, or if it is in the corner and there are two opponent's pieces blocking it from moving. Capturing cannot happen in the placement phase. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n7x7 board, with an X in each corner space, the middle space along each side, and the central space. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces one space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces, or if it is in the corner and there are two opponent's pieces blocking it from moving. Capturing cannot happen in the placement phase. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them.\n\n### Response:\n",
    "completion": "(game \"Gala (Buginese)\" (players 2) (equipment {(board (square 7)) (piece \"Marker\" Each (move Step Orthogonal (to if:(is Empty (to))) (then (and (custodial (from (last To)) Orthogonal (between (max 1) if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Friend (who at:(to))))) (surround (from (last To)) Orthogonal (between if:(and (is Enemy (who at:(between))) (is In (between) (sites Corners))) (apply (remove (between)))) (to if:(is Friend (who at:(to))))))))) (hand Each) (regions \"HalfBoard\" P1 (expand (sites Bottom) steps:3)) (regions \"HalfBoard\" P2 (expand (sites Top) steps:3))}) (rules (start {(place \"Marker1\" (handSite P1) count:13) (place \"Marker2\" (handSite P2) count:10)}) phases:{(phase \"CentrePlacing\" P1 (play (move (from (handSite P1)) (to (centrePoint)))) (nextPhase \"Placement\")) (phase \"Placement\" P2 (play (if (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site))))) (move (from (handSite Mover)) (to (intersection (sites Empty) (sites Mover)))) (move Pass))) (nextPhase (and (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site))))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)) (end {(if (no Moves P2) (result P1 Win)) (if (< (count Pieces P1) 2) (result P2 Win))}))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "7x7 board, with an X in each corner space, the middle space along each side, and the central space. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces one space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces, or if it is in the corner and there are two opponent's pieces blocking it from moving. Capturing cannot happen in the placement phase. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 board. Markings in the central square, each corner square, and the central square of each side. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces on space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them.\n\n### Response:\n",
    "completion": "(game \"Gala\" (players 2) (equipment {(board (square 5)) (hand Each) (regions P1 (expand (sites Bottom) steps:2)) (regions P2 (expand (sites Top) steps:2)) (regions \"MarkedCells\" (union {(sites Centre) (sites Corners) (intersection (sites Outer) (sites Row (row of:(centrePoint)))) (intersection (sites Outer) (sites Column (column of:(centrePoint))))})) (piece \"Marker\" Each (move Step Orthogonal (to if:(is Empty (to)))))}) (rules (start {(place \"Marker1\" (handSite P1) count:10) (place \"Marker2\" (handSite P2) count:12) (place \"Marker2\" (centrePoint))}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (intersection (sites Empty) (sites Mover))))) (nextPhase (and (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site))))) \"Movement\")) (phase \"Movement\" (play (forEach Piece (then (custodial (from (last To)) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Friend (who at:(to)))))))) (end {(if (no Moves P1) (result P2 Win)) (if (< (count Pieces P2) 2) (result P1 Win))}))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 board. Markings in the central square, each corner square, and the central square of each side. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces on space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 board. Markings in the central square, each corner square, and the central square of each side. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces on space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them.\n\n### Response:\n",
    "completion": "(game \"Gala\" (players 2) (equipment {(board (square 5)) (hand Each) (regions P1 (expand (sites Bottom) steps:2)) (regions P2 (expand (sites Top) steps:2)) (regions \"MarkedCells\" (union {(sites Centre) (sites Corners) (intersection (sites Outer) (sites Row (row of:(centrePoint)))) (intersection (sites Outer) (sites Column (column of:(centrePoint))))})) (piece \"Marker\" Each (move Step Orthogonal (to if:(is Empty (to)))))}) (rules (start {(place \"Marker1\" (handSite P1) count:10) (place \"Marker2\" (handSite P2) count:12) (place \"Marker2\" (centrePoint))}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (intersection (sites Empty) (sites Mover))))) (nextPhase (and (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site))))) \"Movement\")) (phase \"Movement\" (play (forEach Piece (then (custodial (from (last To)) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Friend (who at:(to)))))))) (end {(if (no Moves P1) (result P2 Win)) (if (< (count Pieces P2) 2) (result P1 Win))}))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 board. Markings in the central square, each corner square, and the central square of each side. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces on space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 board. Markings in the central square, each corner square, and the central square of each side. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces on space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them.\n\n### Response:\n",
    "completion": "(game \"Gala\" (players 2) (equipment {(board (square 5)) (hand Each) (regions P1 (expand (sites Bottom) steps:2)) (regions P2 (expand (sites Top) steps:2)) (regions \"MarkedCells\" (union {(sites Centre) (sites Corners) (intersection (sites Outer) (sites Row (row of:(centrePoint)))) (intersection (sites Outer) (sites Column (column of:(centrePoint))))})) (piece \"Marker\" Each (move Step Orthogonal (to if:(is Empty (to)))))}) (rules (start {(place \"Marker1\" (handSite P1) count:10) (place \"Marker2\" (handSite P2) count:12) (place \"Marker2\" (centrePoint))}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (intersection (sites Empty) (sites Mover))))) (nextPhase (and (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site))))) \"Movement\")) (phase \"Movement\" (play (forEach Piece (then (custodial (from (last To)) (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Friend (who at:(to)))))))) (end {(if (no Moves P1) (result P2 Win)) (if (< (count Pieces P2) 2) (result P1 Win))}))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 board. Markings in the central square, each corner square, and the central square of each side. Black plays with thirteen pieces, white plays with ten. Black places the first piece on the central square, then players alternate turns placing a piece on their own half of the board. When all of the pieces are placed, players alternate turns moving pieces on space orthogonally. A piece is captured when it is surrounded on two opposite sides by opponent's pieces. Black wins if it can block white from being able to move. White wins if it is impossible for black to block them."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n28 squares arranged in a cross-shaped board. Diagonals are drawn in each 2x2 square. Pieces are played on the lines of the board. One player plays as a single fox, placed on the center of the third line from the top of one arm of the cross. The other player plays as eighteen geese, placed on the points on the opposite arm of the cross and the first horizontal line of the horizontal arms of the cross. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The geese may not move backward. The fox may capture a goose by hopping over it to an empty spot immediately on the opposite side of the goose along the lines of the board. The geese win by blocking the fox from being able to move. The fox wins by capturing all the geese.\n\n### Response:\n",
    "completion": "(game \"Gasetavl (Gedved)\" (players 2) (equipment {(board (merge (shift 0 (/ (- 9 3) 2) (rectangle 3 9 diagonals:Alternating)) (shift (/ (- 9 3) 2) 0 (rectangle 9 3 diagonals:Alternating))) use:Vertex) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Geese\" P2 N (move Step (directions {Rightward Forwards Leftward}) (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" coord:\"E7\") (place \"Geese2\" (sites {\"D1\" \"E1\" \"F1\" \"D2\" \"E2\" \"F2\" \"D3\" \"E3\" \"F3\" \"A4\" \"B4\" \"C4\" \"D4\" \"E4\" \"F4\" \"G4\" \"H4\" \"I4\"}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "28 squares arranged in a cross-shaped board. Diagonals are drawn in each 2x2 square. Pieces are played on the lines of the board. One player plays as a single fox, placed on the center of the third line from the top of one arm of the cross. The other player plays as eighteen geese, placed on the points on the opposite arm of the cross and the first horizontal line of the horizontal arms of the cross. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The geese may not move backward. The fox may capture a goose by hopping over it to an empty spot immediately on the opposite side of the goose along the lines of the board. The geese win by blocking the fox from being able to move. The fox wins by capturing all the geese."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n28 squares arranged in a cross-shaped board. Diagonals are drawn in each 2x2 square. Pieces are played on the lines of the board. One player plays as a single fox, placed on the center of the third line from the top of one arm of the cross. The other player plays as eighteen geese, placed on the points on the opposite arm of the cross and the first horizontal line of the horizontal arms of the cross. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The geese may not move backward. The fox may capture a goose by hopping over it to an empty spot immediately on the opposite side of the goose along the lines of the board. The geese win by blocking the fox from being able to move. The fox wins by capturing all the geese.\n\n### Response:\n",
    "completion": "(game \"Gasetavl (Gedved)\" (players 2) (equipment {(board (merge (shift 0 (/ (- 9 3) 2) (rectangle 3 9 diagonals:Alternating)) (shift (/ (- 9 3) 2) 0 (rectangle 9 3 diagonals:Alternating))) use:Vertex) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Geese\" P2 N (move Step (directions {Rightward Forwards Leftward}) (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" coord:\"E7\") (place \"Geese2\" (sites {\"D1\" \"E1\" \"F1\" \"D2\" \"E2\" \"F2\" \"D3\" \"E3\" \"F3\" \"A4\" \"B4\" \"C4\" \"D4\" \"E4\" \"F4\" \"G4\" \"H4\" \"I4\"}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "28 squares arranged in a cross-shaped board. Diagonals are drawn in each 2x2 square. Pieces are played on the lines of the board. One player plays as a single fox, placed on the center of the third line from the top of one arm of the cross. The other player plays as eighteen geese, placed on the points on the opposite arm of the cross and the first horizontal line of the horizontal arms of the cross. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The geese may not move backward. The fox may capture a goose by hopping over it to an empty spot immediately on the opposite side of the goose along the lines of the board. The geese win by blocking the fox from being able to move. The fox wins by capturing all the geese."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n28 squares arranged in a cross-shaped board. Diagonals are drawn in each 2x2 square. Pieces are played on the lines of the board. One player plays as a single fox, placed on the center of the third line from the top of one arm of the cross. The other player plays as eighteen geese, placed on the points on the opposite arm of the cross and the first horizontal line of the horizontal arms of the cross. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The geese may not move backward. The fox may capture a goose by hopping over it to an empty spot immediately on the opposite side of the goose along the lines of the board. The geese win by blocking the fox from being able to move. The fox wins by capturing all the geese.\n\n### Response:\n",
    "completion": "(game \"Gasetavl (Gedved)\" (players 2) (equipment {(board (merge (shift 0 (/ (- 9 3) 2) (rectangle 3 9 diagonals:Alternating)) (shift (/ (- 9 3) 2) 0 (rectangle 9 3 diagonals:Alternating))) use:Vertex) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Geese\" P2 N (move Step (directions {Rightward Forwards Leftward}) (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" coord:\"E7\") (place \"Geese2\" (sites {\"D1\" \"E1\" \"F1\" \"D2\" \"E2\" \"F2\" \"D3\" \"E3\" \"F3\" \"A4\" \"B4\" \"C4\" \"D4\" \"E4\" \"F4\" \"G4\" \"H4\" \"I4\"}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "28 squares arranged in a cross-shaped board. Diagonals are drawn in each 2x2 square. Pieces are played on the lines of the board. One player plays as a single fox, placed on the center of the third line from the top of one arm of the cross. The other player plays as eighteen geese, placed on the points on the opposite arm of the cross and the first horizontal line of the horizontal arms of the cross. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The geese may not move backward. The fox may capture a goose by hopping over it to an empty spot immediately on the opposite side of the goose along the lines of the board. The geese win by blocking the fox from being able to move. The fox wins by capturing all the geese."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nTwenty squares arranged in a cross shape, with diagonals in each square. The pieces are played on the intersections of the lines. Two foxes are placed on the outer corners of one of the arms of the cross, and twenty geese are placed on the points in the opposite arm, as well as the first two long lines in the perpendicular arms. Players alternate turns moving a piece to an empty spot along the lines on the board. The geese cannot move backward. The foxes may hop over a goose to an empty adjacent spot immediately on the opposite side of it along the lines on the board. The geese win by blocking the foxes from being able to move. The foxes win by capturing all the geese.\n\n### Response:\n",
    "completion": "(game \"Gasetavl\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Solid)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Solid))) use:Vertex) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Geese\" P2 N (move Step (directions {Rightward Forwards Leftward}) (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" (sites {\"G9\" \"I7\"})) (place \"Geese2\" (sites {\"A3\" \"B2\" \"C1\" \"B4\" \"C3\" \"D2\" \"A7\" \"B6\" \"C5\" \"D4\" \"E3\" \"F2\" \"G1\" \"B8\" \"C7\" \"D6\" \"E5\" \"F4\" \"G3\" \"H2\"}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Twenty squares arranged in a cross shape, with diagonals in each square. The pieces are played on the intersections of the lines. Two foxes are placed on the outer corners of one of the arms of the cross, and twenty geese are placed on the points in the opposite arm, as well as the first two long lines in the perpendicular arms. Players alternate turns moving a piece to an empty spot along the lines on the board. The geese cannot move backward. The foxes may hop over a goose to an empty adjacent spot immediately on the opposite side of it along the lines on the board. The geese win by blocking the foxes from being able to move. The foxes win by capturing all the geese."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nTwenty squares arranged in a cross shape, with diagonals in each square. The pieces are played on the intersections of the lines. Two foxes are placed on the outer corners of one of the arms of the cross, and twenty geese are placed on the points in the opposite arm, as well as the first two long lines in the perpendicular arms. Players alternate turns moving a piece to an empty spot along the lines on the board. The geese cannot move backward. The foxes may hop over a goose to an empty adjacent spot immediately on the opposite side of it along the lines on the board. The geese win by blocking the foxes from being able to move. The foxes win by capturing all the geese.\n\n### Response:\n",
    "completion": "(game \"Gasetavl\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Solid)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Solid))) use:Vertex) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Geese\" P2 N (move Step (directions {Rightward Forwards Leftward}) (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" (sites {\"G9\" \"I7\"})) (place \"Geese2\" (sites {\"A3\" \"B2\" \"C1\" \"B4\" \"C3\" \"D2\" \"A7\" \"B6\" \"C5\" \"D4\" \"E3\" \"F2\" \"G1\" \"B8\" \"C7\" \"D6\" \"E5\" \"F4\" \"G3\" \"H2\"}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Twenty squares arranged in a cross shape, with diagonals in each square. The pieces are played on the intersections of the lines. Two foxes are placed on the outer corners of one of the arms of the cross, and twenty geese are placed on the points in the opposite arm, as well as the first two long lines in the perpendicular arms. Players alternate turns moving a piece to an empty spot along the lines on the board. The geese cannot move backward. The foxes may hop over a goose to an empty adjacent spot immediately on the opposite side of it along the lines on the board. The geese win by blocking the foxes from being able to move. The foxes win by capturing all the geese."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nTwenty squares arranged in a cross shape, with diagonals in each square. The pieces are played on the intersections of the lines. Two foxes are placed on the outer corners of one of the arms of the cross, and twenty geese are placed on the points in the opposite arm, as well as the first two long lines in the perpendicular arms. Players alternate turns moving a piece to an empty spot along the lines on the board. The geese cannot move backward. The foxes may hop over a goose to an empty adjacent spot immediately on the opposite side of it along the lines on the board. The geese win by blocking the foxes from being able to move. The foxes win by capturing all the geese.\n\n### Response:\n",
    "completion": "(game \"Gasetavl\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Solid)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Solid))) use:Vertex) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Geese\" P2 N (move Step (directions {Rightward Forwards Leftward}) (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" (sites {\"G9\" \"I7\"})) (place \"Geese2\" (sites {\"A3\" \"B2\" \"C1\" \"B4\" \"C3\" \"D2\" \"A7\" \"B6\" \"C5\" \"D4\" \"E3\" \"F2\" \"G1\" \"B8\" \"C7\" \"D6\" \"E5\" \"F4\" \"G3\" \"H2\"}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Twenty squares arranged in a cross shape, with diagonals in each square. The pieces are played on the intersections of the lines. Two foxes are placed on the outer corners of one of the arms of the cross, and twenty geese are placed on the points in the opposite arm, as well as the first two long lines in the perpendicular arms. Players alternate turns moving a piece to an empty spot along the lines on the board. The geese cannot move backward. The foxes may hop over a goose to an empty adjacent spot immediately on the opposite side of it along the lines on the board. The geese win by blocking the foxes from being able to move. The foxes win by capturing all the geese."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nTwo concentric circles, with four radii from the outer circle to in the center, dividing the circles into four equal parts. There are four arcs, each of which bisects a radius between where each radius intersects the circumference of each circle, the arc also intersecting with the outer circle's circumference. One player plays as a bear, which begins on the central point, the other as three hunters, which begin on any three points on the inner circle. The bear plays first. Players alternate turns moving a piece to an empty adjacent spot along the lines. When the bear is unable to move, the game ends and the players play again, switching sides. The player who lasts longest while playing as the bear wins. The game has two rounds.\n\n### Response:\n",
    "completion": "(game \"Gioco dell'Orso\" (players 2) (equipment {(board (add (concentric {1 4 12}) edges:{{6 8} {9 11} {12 14} {5 15}}) use:Vertex) (piece \"Human\" Each (move Step (to if:(is Empty (to))))) (piece \"Bear\" Each (move Step (to if:(is Empty (to))))) (hand Each)}) (rules (start {(place \"Human1\" (handSite P1) count:3) (place \"Bear2\" (sites Centre))}) phases:{(phase \"PlacementP1\" (play (move (from (handSite P1)) (to (intersection (sites Empty) (sites {1 2 3 4}))) (then (if (not (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"HuntingP2\")) (phase \"HuntingP2\" (play (forEach Piece (then (if (not (can Move (move Step (from (where \"Bear\" P2)) (to if:(is Empty (to)))))) (and {(addScore P2 (- (count Moves) 3)) (remove (sites Occupied by:All container:\"Board\")) (add (piece \"Bear1\") (to (sites Centre))) (add (piece \"Human2\") (to (handSite P2)) count:3)}))))) (nextPhase (= 1 (count Sites in:(sites Occupied by:All container:\"Board\"))) \"PlacementP2\")) (phase \"PlacementP2\" (play (move (from (handSite P2)) (to (intersection (sites Empty) (sites {1 2 3 4}))) (then (if (not (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site)))) \"HuntingP1\")) (phase \"HuntingP1\" (play (forEach Piece (then (if (not (can Move (move Step (from (where \"Bear\" P1)) (to if:(is Empty (to)))))) (addScore P1 (- (count Moves) (+ (score P2) 6))))))) (end (if (!= 0 (score P1)) (byScore))))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Two concentric circles, with four radii from the outer circle to in the center, dividing the circles into four equal parts. There are four arcs, each of which bisects a radius between where each radius intersects the circumference of each circle, the arc also intersecting with the outer circle's circumference. One player plays as a bear, which begins on the central point, the other as three hunters, which begin on any three points on the inner circle. The bear plays first. Players alternate turns moving a piece to an empty adjacent spot along the lines. When the bear is unable to move, the game ends and the players play again, switching sides. The player who lasts longest while playing as the bear wins. The game has two rounds."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nTwo concentric circles, with four radii from the outer circle to in the center, dividing the circles into four equal parts. There are four arcs, each of which bisects a radius between where each radius intersects the circumference of each circle, the arc also intersecting with the outer circle's circumference. One player plays as a bear, which begins on the central point, the other as three hunters, which begin on any three points on the inner circle. The bear plays first. Players alternate turns moving a piece to an empty adjacent spot along the lines. When the bear is unable to move, the game ends and the players play again, switching sides. The player who lasts longest while playing as the bear wins. The game has only one round.\n\n### Response:\n",
    "completion": "(game \"Gioco dell'Orso\" (players 2) (equipment {(board (add (concentric {1 4 12}) edges:{{6 8} {9 11} {12 14} {5 15}}) use:Vertex) (piece \"Human\" Each (move Step (to if:(is Empty (to))))) (piece \"Bear\" Each (move Step (to if:(is Empty (to))))) (hand Each)}) (rules (start {(place \"Human1\" (handSite P1) count:3) (place \"Bear2\" (sites Centre))}) phases:{(phase \"PlacementP1\" (play (move (from (handSite P1)) (to (intersection (sites Empty) (sites {1 2 3 4}))) (then (if (not (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"HuntingP2\")) (phase \"HuntingP2\" (play (forEach Piece)) (end {(if (no Moves P2) (result P1 Win)) (if (or (>= (count Moves) (- (value MoveLimit) 10)) (>= (count Turns) (- (value TurnLimit) 5))) (result P2 Win))}))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Two concentric circles, with four radii from the outer circle to in the center, dividing the circles into four equal parts. There are four arcs, each of which bisects a radius between where each radius intersects the circumference of each circle, the arc also intersecting with the outer circle's circumference. One player plays as a bear, which begins on the central point, the other as three hunters, which begin on any three points on the inner circle. The bear plays first. Players alternate turns moving a piece to an empty adjacent spot along the lines. When the bear is unable to move, the game ends and the players play again, switching sides. The player who lasts longest while playing as the bear wins. The game has only one round."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nTwo concentric circles, with four radii from the outer circle to in the center, dividing the circles into four equal parts. There are four arcs, each of which bisects a radius between where each radius intersects the circumference of each circle, the arc also intersecting with the outer circle's circumference. One player plays as a bear, which begins on the central point, the other as three hunters, which begin on any three points on the inner circle. The bear plays first. Players alternate turns moving a piece to an empty adjacent spot along the lines. When the bear is unable to move, the game ends and the players play again, switching sides. The player who lasts longest while playing as the bear wins. The game has two rounds.\n\n### Response:\n",
    "completion": "(game \"Gioco dell'Orso\" (players 2) (equipment {(board (add (concentric {1 4 12}) edges:{{6 8} {9 11} {12 14} {5 15}}) use:Vertex) (piece \"Human\" Each (move Step (to if:(is Empty (to))))) (piece \"Bear\" Each (move Step (to if:(is Empty (to))))) (hand Each)}) (rules (start {(place \"Human1\" (handSite P1) count:3) (place \"Bear2\" (sites Centre))}) phases:{(phase \"PlacementP1\" (play (move (from (handSite P1)) (to (intersection (sites Empty) (sites {1 2 3 4}))) (then (if (not (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"HuntingP2\")) (phase \"HuntingP2\" (play (forEach Piece (then (if (not (can Move (move Step (from (where \"Bear\" P2)) (to if:(is Empty (to)))))) (and {(addScore P2 (- (count Moves) 3)) (remove (sites Occupied by:All container:\"Board\")) (add (piece \"Bear1\") (to (sites Centre))) (add (piece \"Human2\") (to (handSite P2)) count:3)}))))) (nextPhase (= 1 (count Sites in:(sites Occupied by:All container:\"Board\"))) \"PlacementP2\")) (phase \"PlacementP2\" (play (move (from (handSite P2)) (to (intersection (sites Empty) (sites {1 2 3 4}))) (then (if (not (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site)))) \"HuntingP1\")) (phase \"HuntingP1\" (play (forEach Piece (then (if (not (can Move (move Step (from (where \"Bear\" P1)) (to if:(is Empty (to)))))) (addScore P1 (- (count Moves) (+ (score P2) 6))))))) (end (if (!= 0 (score P1)) (byScore))))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Two concentric circles, with four radii from the outer circle to in the center, dividing the circles into four equal parts. There are four arcs, each of which bisects a radius between where each radius intersects the circumference of each circle, the arc also intersecting with the outer circle's circumference. One player plays as a bear, which begins on the central point, the other as three hunters, which begin on any three points on the inner circle. The bear plays first. Players alternate turns moving a piece to an empty adjacent spot along the lines. When the bear is unable to move, the game ends and the players play again, switching sides. The player who lasts longest while playing as the bear wins. The game has two rounds."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayers take turns moving their pieces. Black starts. Players may: Move one or two empty spaces in any direction, or hop over one ring marker in any direction into an empty space. multiple jumps. White may capture an opponent's piece by moving onto its space from an adjacent one. Both the white and black pieces are removed from play. After moving or capturing, the moving player places a hole-in-the-ice ring marker on the moving tokens starting space and any empty space passed over. The goal for the white player is to capture both black tokens. The goal for the black player is to isolate at least one of their pieces so that it cannot be captured. If both players cannot play, black wins.\n\n### Response:\n",
    "completion": "(game \"Go with the Floe\" (players 2) (equipment {(board (keep (square 8) (poly {{-3 4} {4 -3} {11 4} {4 11}}))) (piece \"Seal\" P1 N (or (move Slide (between (max 2) trail:(id \"Disc0\"))) (move Hop (between if:(= (what at:(between)) (id \"Disc0\" Neutral))) (to if:(is Empty (to))) (then (add (piece \"Disc0\") (to (last From))))))) (piece \"Bear\" P2 (or {(move Slide (between (max 2) trail:(id \"Disc0\"))) (move Hop (between if:(= (what at:(between)) (id \"Disc0\" Neutral))) (to if:(is Empty (to))) (then (add (piece \"Disc0\") (to (last From))))) (move Step (to if:(= (what at:(to)) (id \"Seal1\" P1)) (apply (remove (to)))) (then (and (remove (last To)) (add (piece \"Disc0\") (to (last From))))))})) (piece \"Disc\" Neutral)}) (rules (start {(place \"Bear2\" {\"G2\" \"G7\"}) (place \"Seal1\" {\"B2\" \"B7\"})}) (play (forEach Piece)) (end {(if (= (count Sites in:(sites Occupied by:All)) 0) (result P2 Win)) (if (and (no Moves P1) (not (can Move (forEach Piece \"Bear\" (step (to if:(= (what at:(to)) (id \"Seal1\" P1)))))))) (result P1 Win)) (if (all Passed) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Players take turns moving their pieces. Black starts. Players may: Move one or two empty spaces in any direction, or hop over one ring marker in any direction into an empty space. multiple jumps. White may capture an opponent's piece by moving onto its space from an adjacent one. Both the white and black pieces are removed from play. After moving or capturing, the moving player places a hole-in-the-ice ring marker on the moving tokens starting space and any empty space passed over. The goal for the white player is to capture both black tokens. The goal for the black player is to isolate at least one of their pieces so that it cannot be captured. If both players cannot play, black wins."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayers take turns moving their pieces. Black starts. Players may: Move one or two empty spaces in any direction, or hop over one ring marker in any direction into an empty space. multiple jumps. White may capture an opponent's piece by moving onto its space from an adjacent one. Both the white and black pieces are removed from play. After moving or capturing, the moving player places a hole-in-the-ice ring marker on the moving tokens starting space and any empty space passed over. The goal for the white player is to capture both black tokens. The goal for the black player is to isolate at least one of their pieces so that it cannot be captured. If both players cannot play, black wins.\n\n### Response:\n",
    "completion": "(game \"Go with the Floe\" (players 2) (equipment {(board (keep (square 8) (poly {{-3 4} {4 -3} {11 4} {4 11}}))) (piece \"Seal\" P1 N (or (move Slide (between (max 2) trail:(id \"Disc0\"))) (move Hop (between if:(= (what at:(between)) (id \"Disc0\" Neutral))) (to if:(is Empty (to))) (then (add (piece \"Disc0\") (to (last From))))))) (piece \"Bear\" P2 (or {(move Slide (between (max 2) trail:(id \"Disc0\"))) (move Hop (between if:(= (what at:(between)) (id \"Disc0\" Neutral))) (to if:(is Empty (to))) (then (add (piece \"Disc0\") (to (last From))))) (move Step (to if:(= (what at:(to)) (id \"Seal1\" P1)) (apply (remove (to)))) (then (and (remove (last To)) (add (piece \"Disc0\") (to (last From))))))})) (piece \"Disc\" Neutral)}) (rules (start {(place \"Bear2\" {\"G2\" \"G7\"}) (place \"Seal1\" {\"B2\" \"B7\"})}) (play (forEach Piece)) (end {(if (= (count Sites in:(sites Occupied by:All)) 0) (result P2 Win)) (if (and (no Moves P1) (not (can Move (forEach Piece \"Bear\" (step (to if:(= (what at:(to)) (id \"Seal1\" P1)))))))) (result P1 Win)) (if (all Passed) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Players take turns moving their pieces. Black starts. Players may: Move one or two empty spaces in any direction, or hop over one ring marker in any direction into an empty space. multiple jumps. White may capture an opponent's piece by moving onto its space from an adjacent one. Both the white and black pieces are removed from play. After moving or capturing, the moving player places a hole-in-the-ice ring marker on the moving tokens starting space and any empty space passed over. The goal for the white player is to capture both black tokens. The goal for the black player is to isolate at least one of their pieces so that it cannot be captured. If both players cannot play, black wins."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayers take turns moving their pieces. Black starts. Players may: Move one or two empty spaces in any direction, or hop over one ring marker in any direction into an empty space. multiple jumps. White may capture an opponent's piece by moving onto its space from an adjacent one. Both the white and black pieces are removed from play. After moving or capturing, the moving player places a hole-in-the-ice ring marker on the moving tokens starting space and any empty space passed over. The goal for the white player is to capture both black tokens. The goal for the black player is to isolate at least one of their pieces so that it cannot be captured. If both players cannot play, black wins.\n\n### Response:\n",
    "completion": "(game \"Go with the Floe\" (players 2) (equipment {(board (keep (square 8) (poly {{-3 4} {4 -3} {11 4} {4 11}}))) (piece \"Seal\" P1 N (or (move Slide (between (max 2) trail:(id \"Disc0\"))) (move Hop (between if:(= (what at:(between)) (id \"Disc0\" Neutral))) (to if:(is Empty (to))) (then (add (piece \"Disc0\") (to (last From))))))) (piece \"Bear\" P2 (or {(move Slide (between (max 2) trail:(id \"Disc0\"))) (move Hop (between if:(= (what at:(between)) (id \"Disc0\" Neutral))) (to if:(is Empty (to))) (then (add (piece \"Disc0\") (to (last From))))) (move Step (to if:(= (what at:(to)) (id \"Seal1\" P1)) (apply (remove (to)))) (then (and (remove (last To)) (add (piece \"Disc0\") (to (last From))))))})) (piece \"Disc\" Neutral)}) (rules (start {(place \"Bear2\" {\"G2\" \"G7\"}) (place \"Seal1\" {\"B2\" \"B7\"})}) (play (forEach Piece)) (end {(if (= (count Sites in:(sites Occupied by:All)) 0) (result P2 Win)) (if (and (no Moves P1) (not (can Move (forEach Piece \"Bear\" (step (to if:(= (what at:(to)) (id \"Seal1\" P1)))))))) (result P1 Win)) (if (all Passed) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Players take turns moving their pieces. Black starts. Players may: Move one or two empty spaces in any direction, or hop over one ring marker in any direction into an empty space. multiple jumps. White may capture an opponent's piece by moving onto its space from an adjacent one. Both the white and black pieces are removed from play. After moving or capturing, the moving player places a hole-in-the-ice ring marker on the moving tokens starting space and any empty space passed over. The goal for the white player is to capture both black tokens. The goal for the black player is to isolate at least one of their pieces so that it cannot be captured. If both players cannot play, black wins."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nSquare board, divided into eight equal triangles, with the central horizonal line extended past the square on either side and lines connecting the end point to the two nearby cornes of the square One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The game has an ending condition only for P1.\n\n### Response:\n",
    "completion": "(game \"Haretavl\" (players 2) (equipment {(board (merge {(rectangle 3 3 diagonals:Alternating) (shift 1.5 0.5 (rotate -90 (wedge 2))) (shift -1.5 0.5 (rotate 90 (wedge 2)))}) use:Vertex) (hand Each) (piece \"Dog\" P1 (move Step (to if:(is Empty (to))))) (piece \"Hare\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Dog1\" (handSite P1) count:3) (place \"Hare2\" (handSite P2))}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Square board, divided into eight equal triangles, with the central horizonal line extended past the square on either side and lines connecting the end point to the two nearby cornes of the square One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The game has an ending condition only for P1."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nSquare board, divided into eight equal triangles, with the central horizonal line extended past the square on either side and lines connecting the end point to the two nearby cornes of the square One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The game has an ending condition for each player.\n\n### Response:\n",
    "completion": "(game \"Haretavl\" (players 2) (equipment {(board (merge {(rectangle 3 3 diagonals:Alternating) (shift 1.5 0.5 (rotate -90 (wedge 2))) (shift -1.5 0.5 (rotate 90 (wedge 2)))}) use:Vertex) (hand Each) (piece \"Dog\" P1 (move Step (to if:(is Empty (to))))) (piece \"Hare\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Dog1\" (handSite P1) count:3) (place \"Hare2\" (handSite P2))}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P2) (result P1 Win)) (if (or (>= (count Moves) (- (value MoveLimit) 10)) (>= (count Turns) (- (value TurnLimit) 5))) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Square board, divided into eight equal triangles, with the central horizonal line extended past the square on either side and lines connecting the end point to the two nearby cornes of the square One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The game has an ending condition for each player."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nSquare board, divided into eight equal triangles, with the central horizonal line extended past the square on either side and lines connecting the end point to the two nearby cornes of the square One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The game has an ending condition only for P1.\n\n### Response:\n",
    "completion": "(game \"Haretavl\" (players 2) (equipment {(board (merge {(rectangle 3 3 diagonals:Alternating) (shift 1.5 0.5 (rotate -90 (wedge 2))) (shift -1.5 0.5 (rotate 90 (wedge 2)))}) use:Vertex) (hand Each) (piece \"Dog\" P1 (move Step (to if:(is Empty (to))))) (piece \"Hare\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Dog1\" (handSite P1) count:3) (place \"Hare2\" (handSite P2))}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Square board, divided into eight equal triangles, with the central horizonal line extended past the square on either side and lines connecting the end point to the two nearby cornes of the square One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The game has an ending condition only for P1."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThree diamonds in a row, the central one connecting to the others one opposite corners. A horizontal line connects the top corners of the diamonds, another horizontal line connects the bottom corners of the diamonds, and a longer horizontal line connects all the middle corners. The outer two diamonds have vertical lines connecting their top and bottom corners. One player plays as three hounds, which begin on the outer corner and top and bottom corner of one of the end diamonds. The other player plays as one hare, which begins on the central point of the same diamond. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The Hare moves first. The hounds win by blocking the hare from being able to move. The game has an ending condition only for P2.\n\n### Response:\n",
    "completion": "(game \"Hund efter Hare (Vendsyssel)\" (players 2) (equipment {(board (add (merge {(add (remove (rectangle 1 7) vertices:{3}) edges:{{2 3}}) (scale 2 (shift 0.5 -0.5 (rectangle 1 3))) (scale 2 (shift 0.5 0.5 (rectangle 1 3)))}) edges:{{0 9} {0 6} {11 5} {5 8} {1 6} {1 9} {4 11} {4 8} {9 2} {2 7} {6 2} {2 10} {10 3} {3 8} {7 3} {3 11}}) use:Vertex) (piece \"Hare\" P1 (move Step (to if:(is Empty (to))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Hare1\" coord:\"B2\") (place \"Dog2\" (sites {\"A2\" \"B1\" \"B3\"}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Three diamonds in a row, the central one connecting to the others one opposite corners. A horizontal line connects the top corners of the diamonds, another horizontal line connects the bottom corners of the diamonds, and a longer horizontal line connects all the middle corners. The outer two diamonds have vertical lines connecting their top and bottom corners. One player plays as three hounds, which begin on the outer corner and top and bottom corner of one of the end diamonds. The other player plays as one hare, which begins on the central point of the same diamond. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The Hare moves first. The hounds win by blocking the hare from being able to move. The game has an ending condition only for P2."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThree diamonds in a row, the central one connecting to the others one opposite corners. A horizontal line connects the top corners of the diamonds, another horizontal line connects the bottom corners of the diamonds, and a longer horizontal line connects all the middle corners. The outer two diamonds have vertical lines connecting their top and bottom corners. One player plays as three hounds, which begin on the outer corner and top and bottom corner of one of the end diamonds. The other player plays as one hare, which begins on the central point of the same diamond. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The Hare moves first. The hounds win by blocking the hare from being able to move. The game has an ending condition for each player.\n\n### Response:\n",
    "completion": "(game \"Hund efter Hare (Vendsyssel)\" (players 2) (equipment {(board (add (merge {(add (remove (rectangle 1 7) vertices:{3}) edges:{{2 3}}) (scale 2 (shift 0.5 -0.5 (rectangle 1 3))) (scale 2 (shift 0.5 0.5 (rectangle 1 3)))}) edges:{{0 9} {0 6} {11 5} {5 8} {1 6} {1 9} {4 11} {4 8} {9 2} {2 7} {6 2} {2 10} {10 3} {3 8} {7 3} {3 11}}) use:Vertex) (piece \"Hare\" P1 (move Step (to if:(is Empty (to))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Hare1\" coord:\"B2\") (place \"Dog2\" (sites {\"A2\" \"B1\" \"B3\"}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (or (>= (count Moves) (- (value MoveLimit) 10)) (>= (count Turns) (- (value TurnLimit) 5))) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Three diamonds in a row, the central one connecting to the others one opposite corners. A horizontal line connects the top corners of the diamonds, another horizontal line connects the bottom corners of the diamonds, and a longer horizontal line connects all the middle corners. The outer two diamonds have vertical lines connecting their top and bottom corners. One player plays as three hounds, which begin on the outer corner and top and bottom corner of one of the end diamonds. The other player plays as one hare, which begins on the central point of the same diamond. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The Hare moves first. The hounds win by blocking the hare from being able to move. The game has an ending condition for each player."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThree diamonds in a row, the central one connecting to the others one opposite corners. A horizontal line connects the top corners of the diamonds, another horizontal line connects the bottom corners of the diamonds, and a longer horizontal line connects all the middle corners. The outer two diamonds have vertical lines connecting their top and bottom corners. One player plays as three hounds, which begin on the outer corner and top and bottom corner of one of the end diamonds. The other player plays as one hare, which begins on the central point of the same diamond. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The Hare moves first. The hounds win by blocking the hare from being able to move. The game has an ending condition only for P2.\n\n### Response:\n",
    "completion": "(game \"Hund efter Hare (Vendsyssel)\" (players 2) (equipment {(board (add (merge {(add (remove (rectangle 1 7) vertices:{3}) edges:{{2 3}}) (scale 2 (shift 0.5 -0.5 (rectangle 1 3))) (scale 2 (shift 0.5 0.5 (rectangle 1 3)))}) edges:{{0 9} {0 6} {11 5} {5 8} {1 6} {1 9} {4 11} {4 8} {9 2} {2 7} {6 2} {2 10} {10 3} {3 8} {7 3} {3 11}}) use:Vertex) (piece \"Hare\" P1 (move Step (to if:(is Empty (to))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Hare1\" coord:\"B2\") (place \"Dog2\" (sites {\"A2\" \"B1\" \"B3\"}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Three diamonds in a row, the central one connecting to the others one opposite corners. A horizontal line connects the top corners of the diamonds, another horizontal line connects the bottom corners of the diamonds, and a longer horizontal line connects all the middle corners. The outer two diamonds have vertical lines connecting their top and bottom corners. One player plays as three hounds, which begin on the outer corner and top and bottom corner of one of the end diamonds. The other player plays as one hare, which begins on the central point of the same diamond. Players alternate turns moving a piece to an empty adjacent spot along the lines of the board. The Hare moves first. The hounds win by blocking the hare from being able to move. The game has an ending condition only for P2."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nSquare board, divided into eight equal triangles, and a circle around the square, touching it at the corners, One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The First player moves only when all the pieces are placed.\n\n### Response:\n",
    "completion": "(game \"Hyvn aetter Hare\" (players 2) (equipment {(board (splitCrossings (merge (shift 0.5 0.5 (scale 0.707 (concentric {1 8}))) (square 2))) use:Vertex) (piece \"Hare\" P1 (move Step (to if:(is Empty (to))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to))))) (hand Each)}) (rules (start {(place \"Hare1\" (handSite P1) count:1) (place \"Dog2\" (handSite P2) count:3)}) phases:{(phase \"Placement\" (play (if (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site))))) (move (from (handSite Mover)) (to (sites Empty))))) (nextPhase (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)) (end (if (no Moves Next) (result Next Loss))))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Square board, divided into eight equal triangles, and a circle around the square, touching it at the corners, One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The First player moves only when all the pieces are placed."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nSquare board, divided into eight equal triangles, and a circle around the square, touching it at the corners, One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The First player moves only when all the pieces are placed. The game has an ending condition for each player.\n\n### Response:\n",
    "completion": "(game \"Hyvn aetter Hare\" (players 2) (equipment {(board (splitCrossings (merge (shift 0.5 0.5 (scale 0.707 (concentric {1 8}))) (square 2))) use:Vertex) (piece \"Hare\" P1 (move Step (to if:(is Empty (to))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to))))) (hand Each)}) (rules (start {(place \"Hare1\" (handSite P1) count:1) (place \"Dog2\" (handSite P2) count:3)}) phases:{(phase \"Placement\" (play (if (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site))))) (move (from (handSite Mover)) (to (sites Empty))))) (nextPhase (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)) (end {(if (no Moves Next) (result Next Loss)) (if (or (>= (count Moves) (- (value MoveLimit) 10)) (>= (count Turns) (- (value TurnLimit) 5))) (result P1 Win))}))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Square board, divided into eight equal triangles, and a circle around the square, touching it at the corners, One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The First player moves only when all the pieces are placed. The game has an ending condition for each player."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nSquare board, divided into eight equal triangles, and a circle around the square, touching it at the corners, One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The First player can move after placing his piece.\n\n### Response:\n",
    "completion": "(game \"Hyvn aetter Hare\" (players 2) (equipment {(board (splitCrossings (merge (shift 0.5 0.5 (scale 0.707 (concentric {1 8}))) (square 2))) use:Vertex) (piece \"Hare\" P1 (move Step (to if:(is Empty (to))))) (piece \"Dog\" P2 (move Step (to if:(is Empty (to))))) (hand Each)}) (rules (start {(place \"Hare1\" (handSite P1) count:1) (place \"Dog2\" (handSite P2) count:3)}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end (if (no Moves Next) (result Next Loss)))))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Square board, divided into eight equal triangles, and a circle around the square, touching it at the corners, One player plays as the hare, the other player as three hounds. Players take turns placing one of their pieces on the board. When a player has placed all their pieces, they move to an adjacent empty spot. When the hounds block the hare from being able to move, the hounds win. The First player can move after placing his piece."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThe board consists of three instersecting lines, with diagonals drawn in the square formed. On opposite ends of the square, the central line is extended beyond the square and lines drawn from the adjacent corners to the end of this line, forming two triangles at opposite ends. One player takes the part of three white towers, the other the part of a single black army piece. First the army moves their piece, then the towers move one of their pieces, play alternating thereafter until the game is ended. A tower piece may move one step along a marked line in any forward or sideways direction. Tower pieces cannot move backwards, diagonally or otherwise, towards the end of the board from which they started. The army may move one step in any direction along a marked line. The army wins by passing the towers and reaching the end of the board from which they started. The towers win by trapping the army so that it cannot move in its turn. The towers can move in sideway and forwards (including diagonal and orthogonal forward). The army can move in all the directions. The army can not move. The game is played according to the rules of Lucas with the pieces already on the board.\n\n### Response:\n",
    "completion": "(game \"Jeu Militaire\" (players 2) (equipment {(board (rotate 90 (merge {(rectangle 3 3 diagonals:Alternating) (shift 1.5 0.5 (rotate -90 (wedge 2))) (shift -1.5 0.5 (rotate 90 (wedge 2)))})) use:Vertex) (piece \"Pawn\" P1 (move Step (to if:(is Empty (to))))) (piece \"Pawn\" P2 N (move Step (directions {Forwards Rightward Leftward}) (to if:(is Empty (to))))) (regions \"Home\" P2 (sites {\"B1\" \"C2\" \"A2\"})) (regions \"Home\" P1 (sites {\"B2\"}))}) (rules (start {(place \"Pawn1\" (sites P1)) (place \"Pawn2\" (sites P2))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (is In (where \"Pawn\" P1) (sites P2)) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "The board consists of three instersecting lines, with diagonals drawn in the square formed. On opposite ends of the square, the central line is extended beyond the square and lines drawn from the adjacent corners to the end of this line, forming two triangles at opposite ends. One player takes the part of three white towers, the other the part of a single black army piece. First the army moves their piece, then the towers move one of their pieces, play alternating thereafter until the game is ended. A tower piece may move one step along a marked line in any forward or sideways direction. Tower pieces cannot move backwards, diagonally or otherwise, towards the end of the board from which they started. The army may move one step in any direction along a marked line. The army wins by passing the towers and reaching the end of the board from which they started. The towers win by trapping the army so that it cannot move in its turn. The towers can move in sideway and forwards (including diagonal and orthogonal forward). The army can move in all the directions. The army can not move. The game is played according to the rules of Lucas with the pieces already on the board."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThe board consists of three instersecting lines, with diagonals drawn in the square formed. On opposite ends of the square, the central line is extended beyond the square and lines drawn from the adjacent corners to the end of this line, forming two triangles at opposite ends. One player takes the part of three white towers, the other the part of a single black army piece. First the army moves their piece, then the towers move one of their pieces, play alternating thereafter until the game is ended. A tower piece may move one step along a marked line in any forward or sideways direction. Tower pieces cannot move backwards, diagonally or otherwise, towards the end of the board from which they started. The army may move one step in any direction along a marked line. The army wins by passing the towers and reaching the end of the board from which they started. The towers win by trapping the army so that it cannot move in its turn. The towers can move forwards (including diagonal and orthogonal forward). The towers can move only orthogonally. The army can not move and all towers moved. The game is played according to the rules of Martin Gardner. The army can be placed anywhere. After twelve moves if no winner, the game is a draw.\n\n### Response:\n",
    "completion": "(game \"Jeu Militaire\" (players 2) (equipment {(board (rotate 90 (merge {(rectangle 3 3 diagonals:Alternating) (shift 1.5 0.5 (rotate -90 (wedge 2))) (shift -1.5 0.5 (rotate 90 (wedge 2)))})) use:Vertex) (hand P1) (piece \"Pawn\" P1 (move Step Orthogonal (to if:(is Empty (to))))) (piece \"Pawn\" P2 N (move Step Forwards (to if:(is Empty (to))))) (regions \"Home\" P2 (sites {\"B1\" \"C2\" \"A2\"})) (regions \"Home\" P1 (sites {\"B2\"}))}) (rules (start {(place \"Pawn1\" \"Hand1\") (place \"Pawn2\" (sites P2))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (and (= (count MovesThisTurn) 2) (no Moves Next)) (result P2 Win)) (if (= (count Moves) 12) (result P1 Draw)) (if (is In (where \"Pawn\" P1) (sites P2)) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "The board consists of three instersecting lines, with diagonals drawn in the square formed. On opposite ends of the square, the central line is extended beyond the square and lines drawn from the adjacent corners to the end of this line, forming two triangles at opposite ends. One player takes the part of three white towers, the other the part of a single black army piece. First the army moves their piece, then the towers move one of their pieces, play alternating thereafter until the game is ended. A tower piece may move one step along a marked line in any forward or sideways direction. Tower pieces cannot move backwards, diagonally or otherwise, towards the end of the board from which they started. The army may move one step in any direction along a marked line. The army wins by passing the towers and reaching the end of the board from which they started. The towers win by trapping the army so that it cannot move in its turn. The towers can move forwards (including diagonal and orthogonal forward). The towers can move only orthogonally. The army can not move and all towers moved. The game is played according to the rules of Martin Gardner. The army can be placed anywhere. After twelve moves if no winner, the game is a draw."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThe board consists of three instersecting lines, with diagonals drawn in the square formed. On opposite ends of the square, the central line is extended beyond the square and lines drawn from the adjacent corners to the end of this line, forming two triangles at opposite ends. One player takes the part of three white towers, the other the part of a single black army piece. First the army moves their piece, then the towers move one of their pieces, play alternating thereafter until the game is ended. A tower piece may move one step along a marked line in any forward or sideways direction. Tower pieces cannot move backwards, diagonally or otherwise, towards the end of the board from which they started. The army may move one step in any direction along a marked line. The army wins by passing the towers and reaching the end of the board from which they started. The towers win by trapping the army so that it cannot move in its turn. The towers can move only forward. The army can move in all the directions. The army can not move. The game is played according to the rules of Martin Gardner with a slightly difference. The army can be placed anywhere except in the middle of the towers.\n\n### Response:\n",
    "completion": "(game \"Jeu Militaire\" (players 2) (equipment {(board (rotate 90 (merge {(rectangle 3 3 diagonals:Alternating) (shift 1.5 0.5 (rotate -90 (wedge 2))) (shift -1.5 0.5 (rotate 90 (wedge 2)))})) use:Vertex) (hand P1) (piece \"Pawn\" P1 (move Step (to if:(is Empty (to))))) (piece \"Pawn\" P2 N (move Step Forward (to if:(is Empty (to))))) (regions \"Home\" P2 (sites {\"B1\" \"C2\" \"A2\"})) (regions \"Home\" P1 (sites {\"B2\"}))}) (rules (start {(place \"Pawn1\" \"Hand1\") (place \"Pawn2\" (sites P2))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (difference (sites Empty) (sites {\"B2\"}))))) (nextPhase \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P1) (result P2 Win)) (if (is In (where \"Pawn\" P1) (sites P2)) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "The board consists of three instersecting lines, with diagonals drawn in the square formed. On opposite ends of the square, the central line is extended beyond the square and lines drawn from the adjacent corners to the end of this line, forming two triangles at opposite ends. One player takes the part of three white towers, the other the part of a single black army piece. First the army moves their piece, then the towers move one of their pieces, play alternating thereafter until the game is ended. A tower piece may move one step along a marked line in any forward or sideways direction. Tower pieces cannot move backwards, diagonally or otherwise, towards the end of the board from which they started. The army may move one step in any direction along a marked line. The army wins by passing the towers and reaching the end of the board from which they started. The towers win by trapping the army so that it cannot move in its turn. The towers can move only forward. The army can move in all the directions. The army can not move. The game is played according to the rules of Martin Gardner with a slightly difference. The army can be placed anywhere except in the middle of the towers."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n8x8 Draughts board. One player plays with two foxes, the other with twelve or more hens, played on the white squares. The hens begin on the rows closest to the player; the foxes begin, one each on the left and right end of the row farthest from the hens. Hens move one space forward diagonally, the foxes move one space diagonally forward or backward. Foxes must alternate turns, i.e., when one fox moves, the other fox must move on the next turn. The foxes may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the foxes from being able to move; the foxes win by capturing all the hens.\n\n### Response:\n",
    "completion": "(game \"Jeu de Renard (Two Foxes)\" (players 2) (equipment {(board (square 8)) (piece \"Fox\" P1 (if (= (state at:(from)) 1) (or (move Step Diagonal (to if:(is Empty (to)))) (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (then (and (forEach Site (sites Occupied by:Mover) (if (= (state at:(site)) 0) (set State at:(site) 1))) (set State at:(last To) 0))))) (piece \"Hen\" P2 N (move Step (directions {FR FL}) (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" (intersection (sites Top) (union (sites Left) (difference (expand (sites Right)) (sites Right)))) state:1) (place \"Hen2\" (difference (expand (sites Bottom) steps:2) (sites Phase 0)))}) phases:{(phase \"Opening\" P1 (play (forEach Piece (or (move Step Diagonal (to if:(is Empty (to)))) (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (then (set State at:(last To) 0))))) (nextPhase \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "8x8 Draughts board. One player plays with two foxes, the other with twelve or more hens, played on the white squares. The hens begin on the rows closest to the player; the foxes begin, one each on the left and right end of the row farthest from the hens. Hens move one space forward diagonally, the foxes move one space diagonally forward or backward. Foxes must alternate turns, i.e., when one fox moves, the other fox must move on the next turn. The foxes may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the foxes from being able to move; the foxes win by capturing all the hens."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n8x8 Draughts board. One player plays with two foxes, the other with twelve or more hens, played on the white squares. The hens begin on the rows closest to the player; the foxes begin, one each on the left and right end of the row farthest from the hens. Hens move one space forward diagonally, the foxes move one space diagonally forward or backward. Foxes must alternate turns, i.e., when one fox moves, the other fox must move on the next turn. The foxes may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the foxes from being able to move; the foxes win by capturing all the hens.\n\n### Response:\n",
    "completion": "(game \"Jeu de Renard (Two Foxes)\" (players 2) (equipment {(board (square 8)) (piece \"Fox\" P1 (if (= (state at:(from)) 1) (or (move Step Diagonal (to if:(is Empty (to)))) (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (then (and (forEach Site (sites Occupied by:Mover) (if (= (state at:(site)) 0) (set State at:(site) 1))) (set State at:(last To) 0))))) (piece \"Hen\" P2 N (move Step (directions {FR FL}) (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" (intersection (sites Top) (union (sites Left) (difference (expand (sites Right)) (sites Right)))) state:1) (place \"Hen2\" (difference (expand (sites Bottom) steps:2) (sites Phase 0)))}) phases:{(phase \"Opening\" P1 (play (forEach Piece (or (move Step Diagonal (to if:(is Empty (to)))) (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (then (set State at:(last To) 0))))) (nextPhase \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "8x8 Draughts board. One player plays with two foxes, the other with twelve or more hens, played on the white squares. The hens begin on the rows closest to the player; the foxes begin, one each on the left and right end of the row farthest from the hens. Hens move one space forward diagonally, the foxes move one space diagonally forward or backward. Foxes must alternate turns, i.e., when one fox moves, the other fox must move on the next turn. The foxes may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the foxes from being able to move; the foxes win by capturing all the hens."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n8x8 Draughts board. One player plays with two foxes, the other with twelve or more hens, played on the white squares. The hens begin on the rows closest to the player; the foxes begin, one each on the left and right end of the row farthest from the hens. Hens move one space forward diagonally, the foxes move one space diagonally forward or backward. Foxes must alternate turns, i.e., when one fox moves, the other fox must move on the next turn. The foxes may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the foxes from being able to move; the foxes win by capturing all the hens.\n\n### Response:\n",
    "completion": "(game \"Jeu de Renard (Two Foxes)\" (players 2) (equipment {(board (square 8)) (piece \"Fox\" P1 (if (= (state at:(from)) 1) (or (move Step Diagonal (to if:(is Empty (to)))) (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))))) (then (and (forEach Site (sites Occupied by:Mover) (if (= (state at:(site)) 0) (set State at:(site) 1))) (set State at:(last To) 0))))) (piece \"Hen\" P2 N (move Step (directions {FR FL}) (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" (intersection (sites Top) (union (sites Left) (difference (expand (sites Right)) (sites Right)))) state:1) (place \"Hen2\" (difference (expand (sites Bottom) steps:2) (sites Phase 0)))}) phases:{(phase \"Opening\" P1 (play (forEach Piece (or (move Step Diagonal (to if:(is Empty (to)))) (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (then (set State at:(last To) 0))))) (nextPhase \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "8x8 Draughts board. One player plays with two foxes, the other with twelve or more hens, played on the white squares. The hens begin on the rows closest to the player; the foxes begin, one each on the left and right end of the row farthest from the hens. Hens move one space forward diagonally, the foxes move one space diagonally forward or backward. Foxes must alternate turns, i.e., when one fox moves, the other fox must move on the next turn. The foxes may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the foxes from being able to move; the foxes win by capturing all the hens."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n8x8 Draughts board. One player plays with a single fox, the other with twelve hens, played on the white squares. The hens begin on the first three rows; the fox may begin on whatever spot the player chooses. Hens move one space forward diagonally, the fox moves one space diagonally forward or backward. The fox may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the fox from being able to move; the fox wins by capturing all the hens.\n\n### Response:\n",
    "completion": "(game \"Jeu de Renard\" (players 2) (equipment {(board (square 8)) (piece \"Fox\" P1 (or (move Step Diagonal (to if:(is Empty (to)))) (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))))) (piece \"Hen\" P2 N (move Step (directions {FR FL}) (to if:(is Empty (to))))) (hand P1)}) (rules (start {(place \"Fox1\" (handSite P1)) (place \"Hen2\" (difference (expand (sites Bottom) steps:2) (sites Phase 0)))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite Mover)) (to (difference (sites Empty) (sites Phase 0))))) (nextPhase \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "8x8 Draughts board. One player plays with a single fox, the other with twelve hens, played on the white squares. The hens begin on the first three rows; the fox may begin on whatever spot the player chooses. Hens move one space forward diagonally, the fox moves one space diagonally forward or backward. The fox may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the fox from being able to move; the fox wins by capturing all the hens."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n8x8 Draughts board. One player plays with a single fox, the other with twelve hens, played on the white squares. The hens begin on the first three rows; the fox may begin on whatever spot the player chooses. Hens move one space forward diagonally, the fox moves one space diagonally forward or backward. The fox may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the fox from being able to move; the fox wins by capturing all the hens.\n\n### Response:\n",
    "completion": "(game \"Jeu de Renard\" (players 2) (equipment {(board (square 8)) (piece \"Fox\" P1 (or (move Step Diagonal (to if:(is Empty (to)))) (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))))) (piece \"Hen\" P2 N (move Step (directions {FR FL}) (to if:(is Empty (to))))) (hand P1)}) (rules (start {(place \"Fox1\" (handSite P1)) (place \"Hen2\" (difference (expand (sites Bottom) steps:2) (sites Phase 0)))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite Mover)) (to (difference (sites Empty) (sites Phase 0))))) (nextPhase \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "8x8 Draughts board. One player plays with a single fox, the other with twelve hens, played on the white squares. The hens begin on the first three rows; the fox may begin on whatever spot the player chooses. Hens move one space forward diagonally, the fox moves one space diagonally forward or backward. The fox may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the fox from being able to move; the fox wins by capturing all the hens."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n8x8 Draughts board. One player plays with a single fox, the other with twelve hens, played on the white squares. The hens begin on the first three rows; the fox may begin on whatever spot the player chooses. Hens move one space forward diagonally, the fox moves one space diagonally forward or backward. The fox may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the fox from being able to move; the fox wins by capturing all the hens.\n\n### Response:\n",
    "completion": "(game \"Jeu de Renard\" (players 2) (equipment {(board (square 8)) (piece \"Fox\" P1 (or (move Step Diagonal (to if:(is Empty (to)))) (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))))) (piece \"Hen\" P2 N (move Step (directions {FR FL}) (to if:(is Empty (to))))) (hand P1)}) (rules (start {(place \"Fox1\" (handSite P1)) (place \"Hen2\" (difference (expand (sites Bottom) steps:2) (sites Phase 0)))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite Mover)) (to (difference (sites Empty) (sites Phase 0))))) (nextPhase \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P1) (result P2 Win)) (if (no Pieces P2) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "8x8 Draughts board. One player plays with a single fox, the other with twelve hens, played on the white squares. The hens begin on the first three rows; the fox may begin on whatever spot the player chooses. Hens move one space forward diagonally, the fox moves one space diagonally forward or backward. The fox may capture a hen by hopping over it to an empty space diagonally on the other side of it. The hens win by blocking the fox from being able to move; the fox wins by capturing all the hens."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on cross-shaped board, made of five squares, each divided into four squares and with the diagonals of the larger squares drawn. One player plays as thirteen hens, which begin on the points on one of the arms of the cross and along the line immediately perpendicular to that arm. The other player plays as one fox, which can be placed on any empty point of the board. Players alternate turns moving to an empty adjacent spot along the lines of the board. The hens, however, can only move in a forward direction. The fox may hop over an adjacent hen to an empty spot immediately on the opposite side of the hen along the lines of the board. The fox wins by capturing all the hens, the hens win by blocking the fox from being able to move.\n\n### Response:\n",
    "completion": "(game \"Jeu du Renard et de la Poule\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (hand P1) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain)))) (move Step (to if:(is Empty (to)))))) (piece \"Hen\" P2 N (move Step Forwards (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" (handSite P1)) (place \"Hen2\" (union (expand (sites Bottom)) (sites Row 2)))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves Next) (result Next Loss)) (if (no Pieces P2) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on cross-shaped board, made of five squares, each divided into four squares and with the diagonals of the larger squares drawn. One player plays as thirteen hens, which begin on the points on one of the arms of the cross and along the line immediately perpendicular to that arm. The other player plays as one fox, which can be placed on any empty point of the board. Players alternate turns moving to an empty adjacent spot along the lines of the board. The hens, however, can only move in a forward direction. The fox may hop over an adjacent hen to an empty spot immediately on the opposite side of the hen along the lines of the board. The fox wins by capturing all the hens, the hens win by blocking the fox from being able to move."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on cross-shaped board, made of five squares, each divided into four squares and with the diagonals of the larger squares drawn. One player plays as thirteen hens, which begin on the points on one of the arms of the cross and along the line immediately perpendicular to that arm. The other player plays as one fox, which can be placed on any empty point of the board. Players alternate turns moving to an empty adjacent spot along the lines of the board. The hens, however, can only move in a forward direction. The fox may hop over an adjacent hen to an empty spot immediately on the opposite side of the hen along the lines of the board. The fox wins by capturing all the hens, the hens win by blocking the fox from being able to move.\n\n### Response:\n",
    "completion": "(game \"Jeu du Renard et de la Poule\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (hand P1) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain)))) (move Step (to if:(is Empty (to)))))) (piece \"Hen\" P2 N (move Step Forwards (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" (handSite P1)) (place \"Hen2\" (union (expand (sites Bottom)) (sites Row 2)))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves Next) (result Next Loss)) (if (no Pieces P2) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on cross-shaped board, made of five squares, each divided into four squares and with the diagonals of the larger squares drawn. One player plays as thirteen hens, which begin on the points on one of the arms of the cross and along the line immediately perpendicular to that arm. The other player plays as one fox, which can be placed on any empty point of the board. Players alternate turns moving to an empty adjacent spot along the lines of the board. The hens, however, can only move in a forward direction. The fox may hop over an adjacent hen to an empty spot immediately on the opposite side of the hen along the lines of the board. The fox wins by capturing all the hens, the hens win by blocking the fox from being able to move."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on cross-shaped board, made of five squares, each divided into four squares and with the diagonals of the larger squares drawn. One player plays as thirteen hens, which begin on the points on one of the arms of the cross and along the line immediately perpendicular to that arm. The other player plays as one fox, which can be placed on any empty point of the board. Players alternate turns moving to an empty adjacent spot along the lines of the board. The hens, however, can only move in a forward direction. The fox may hop over an adjacent hen to an empty spot immediately on the opposite side of the hen along the lines of the board. The fox wins by capturing all the hens, the hens win by blocking the fox from being able to move.\n\n### Response:\n",
    "completion": "(game \"Jeu du Renard et de la Poule\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (hand P1) (piece \"Fox\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain)))) (move Step (to if:(is Empty (to)))))) (piece \"Hen\" P2 N (move Step Forwards (to if:(is Empty (to)))))}) (rules (start {(place \"Fox1\" (handSite P1)) (place \"Hen2\" (union (expand (sites Bottom)) (sites Row 2)))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves Next) (result Next Loss)) (if (no Pieces P2) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on cross-shaped board, made of five squares, each divided into four squares and with the diagonals of the larger squares drawn. One player plays as thirteen hens, which begin on the points on one of the arms of the cross and along the line immediately perpendicular to that arm. The other player plays as one fox, which can be placed on any empty point of the board. Players alternate turns moving to an empty adjacent spot along the lines of the board. The hens, however, can only move in a forward direction. The fox may hop over an adjacent hen to an empty spot immediately on the opposite side of the hen along the lines of the board. The fox wins by capturing all the hens, the hens win by blocking the fox from being able to move."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on a five-pointed star shaped board. One player plays with one piece, the \"tiger,\" and the other plays with seven pieces, the \"kaooas.\" The player with the kaooas attempt to checkmate the tiger by moving to one of the points where the lines of the board intersect. The tiger captures kaooas by hopping over them. The tiger wins by capturing all the kaooas. The game starts with 7 discs for the second player.\n\n### Response:\n",
    "completion": "(game \"Kaooa\" (players 2) (equipment {(board (splitCrossings (regular Star 5)) use:Vertex) (hand Each) (piece \"Marker\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain)))) (move Step (to if:(is Empty (to)))))) (piece \"Marker\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Marker1\" (handSite P1) count:1) (place \"Marker2\" (handSite P2) count:7)}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)) (end (if (no Moves Next) (result Next Loss))))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on a five-pointed star shaped board. One player plays with one piece, the \"tiger,\" and the other plays with seven pieces, the \"kaooas.\" The player with the kaooas attempt to checkmate the tiger by moving to one of the points where the lines of the board intersect. The tiger captures kaooas by hopping over them. The tiger wins by capturing all the kaooas. The game starts with 7 discs for the second player."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on a five-pointed star shaped board. One player plays with one piece, the \"tiger,\" and the other plays with seven pieces, the \"kaooas.\" The player with the kaooas attempt to checkmate the tiger by moving to one of the points where the lines of the board intersect. The tiger captures kaooas by hopping over them. The tiger wins by capturing all the kaooas. The game starts with 3 discs for the second player.\n\n### Response:\n",
    "completion": "(game \"Kaooa\" (players 2) (equipment {(board (splitCrossings (regular Star 5)) use:Vertex) (hand Each) (piece \"Marker\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain)))) (move Step (to if:(is Empty (to)))))) (piece \"Marker\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Marker1\" (handSite P1) count:1) (place \"Marker2\" (handSite P2) count:3)}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)) (end (if (no Moves Next) (result Next Loss))))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on a five-pointed star shaped board. One player plays with one piece, the \"tiger,\" and the other plays with seven pieces, the \"kaooas.\" The player with the kaooas attempt to checkmate the tiger by moving to one of the points where the lines of the board intersect. The tiger captures kaooas by hopping over them. The tiger wins by capturing all the kaooas. The game starts with 3 discs for the second player."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on a five-pointed star shaped board. One player plays with one piece, the \"tiger,\" and the other plays with seven pieces, the \"kaooas.\" The player with the kaooas attempt to checkmate the tiger by moving to one of the points where the lines of the board intersect. The tiger captures kaooas by hopping over them. The tiger wins by capturing all the kaooas. The game starts with 4 discs for the second player.\n\n### Response:\n",
    "completion": "(game \"Kaooa\" (players 2) (equipment {(board (splitCrossings (regular Star 5)) use:Vertex) (hand Each) (piece \"Marker\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to))) (then (if (can Move (hop (from (last To)) (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to))))) (moveAgain)))) (move Step (to if:(is Empty (to)))))) (piece \"Marker\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Marker1\" (handSite P1) count:1) (place \"Marker2\" (handSite P2) count:4)}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)) (end (if (no Moves Next) (result Next Loss))))}))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on a five-pointed star shaped board. One player plays with one piece, the \"tiger,\" and the other plays with seven pieces, the \"kaooas.\" The player with the kaooas attempt to checkmate the tiger by moving to one of the points where the lines of the board intersect. The tiger captures kaooas by hopping over them. The tiger wins by capturing all the kaooas. The game starts with 4 discs for the second player."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nOne player has a single piece, the other has twelve, playing as jackrabbits. The player playing as the jackrabbits attempts to move all of their pieces to the opposite side of the board until they form the same configuration as the starting position on the opposite side. Pieces move orthogonally to accomplish this. The opponent's goal is to capture one of the jackrabbits by hopping over it.\n\n### Response:\n",
    "completion": "(game \"Ko-app-paw-na\" (players 2) (equipment {(board (square 5) use:Vertex) (piece \"Rabbit\" P1 (move Step (to if:(is Empty (to))))) (piece \"Counter\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (regions P1 (union (expand (sites Top)) (sites {\"A3\" \"E3\"})))}) (rules (start {(place \"Rabbit1\" (union (expand (sites Bottom)) (sites {\"A3\" \"E3\"}))) (place \"Counter2\" (centrePoint))}) (play (forEach Piece)) (end {(if (= (sites P1) (sites Occupied by:P1)) (result P1 Win)) (if (= (count Pieces P1) 11) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "One player has a single piece, the other has twelve, playing as jackrabbits. The player playing as the jackrabbits attempts to move all of their pieces to the opposite side of the board until they form the same configuration as the starting position on the opposite side. Pieces move orthogonally to accomplish this. The opponent's goal is to capture one of the jackrabbits by hopping over it."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nOne player has a single piece, the other has twelve, playing as jackrabbits. The player playing as the jackrabbits attempts to move all of their pieces to the opposite side of the board until they form the same configuration as the starting position on the opposite side. Pieces move orthogonally to accomplish this. The opponent's goal is to capture one of the jackrabbits by hopping over it.\n\n### Response:\n",
    "completion": "(game \"Ko-app-paw-na\" (players 2) (equipment {(board (square 5) use:Vertex) (piece \"Rabbit\" P1 (move Step (to if:(is Empty (to))))) (piece \"Counter\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (regions P1 (union (expand (sites Top)) (sites {\"A3\" \"E3\"})))}) (rules (start {(place \"Rabbit1\" (union (expand (sites Bottom)) (sites {\"A3\" \"E3\"}))) (place \"Counter2\" (centrePoint))}) (play (forEach Piece)) (end {(if (= (sites P1) (sites Occupied by:P1)) (result P1 Win)) (if (= (count Pieces P1) 11) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "One player has a single piece, the other has twelve, playing as jackrabbits. The player playing as the jackrabbits attempts to move all of their pieces to the opposite side of the board until they form the same configuration as the starting position on the opposite side. Pieces move orthogonally to accomplish this. The opponent's goal is to capture one of the jackrabbits by hopping over it."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nOne player has a single piece, the other has twelve, playing as jackrabbits. The player playing as the jackrabbits attempts to move all of their pieces to the opposite side of the board until they form the same configuration as the starting position on the opposite side. Pieces move orthogonally to accomplish this. The opponent's goal is to capture one of the jackrabbits by hopping over it.\n\n### Response:\n",
    "completion": "(game \"Ko-app-paw-na\" (players 2) (equipment {(board (square 5) use:Vertex) (piece \"Rabbit\" P1 (move Step (to if:(is Empty (to))))) (piece \"Counter\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (regions P1 (union (expand (sites Top)) (sites {\"A3\" \"E3\"})))}) (rules (start {(place \"Rabbit1\" (union (expand (sites Bottom)) (sites {\"A3\" \"E3\"}))) (place \"Counter2\" (centrePoint))}) (play (forEach Piece)) (end {(if (= (sites P1) (sites Occupied by:P1)) (result P1 Win)) (if (= (count Pieces P1) 11) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "One player has a single piece, the other has twelve, playing as jackrabbits. The player playing as the jackrabbits attempts to move all of their pieces to the opposite side of the board until they form the same configuration as the starting position on the opposite side. Pieces move orthogonally to accomplish this. The opponent's goal is to capture one of the jackrabbits by hopping over it."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nA square, with diagonals and lines connecting the midpoints. Two triangles on opposite sides of the triangle. One player plays as three galgos, which are placed on the three points of one of the triangles. The other player plays as one hare, which begins on the point between two of the galgos. The hare may move in any direction along the lines on the board, but must move to the central point of the board on its first move. The galgos may move forward orthogonally or diagonally; they may never move horizontally and may only move backwards if the galgo which starts on the apex of the triangle has moved and the piece to move backwards has not yet moved. If the galgos block the hare from being able to move, they win, if the hare moves past the galgos it wins.\n\n### Response:\n",
    "completion": "(game \"La Liebre Perseguida\" (players 2) (equipment {(board (rotate 90 (merge {(rectangle 3 3 diagonals:Alternating) (shift 1.5 0.5 (rotate -90 (wedge 2))) (shift -1.5 0.5 (rotate 90 (wedge 2)))})) use:Vertex) (piece \"Hare\" P1 (move Step Orthogonal (to if:(is Empty (to))))) (piece \"Rabbit\" P2 N (or (if (= (state at:(from)) 1) (move Step Backwards (to if:(and (is In (to) (sites Bottom)) (is Empty (to)))) (then (if (= (state at:(last To)) 1) (set State at:(last To) 0))))) (move Step Forwards (to if:(is Empty (to))) (then (if (= (state at:(last To)) 1) (set State at:(last To) 0)))))) (regions \"Home\" P2 (sites {\"B1\" \"C2\" \"A2\"})) (regions \"Home\" P1 (sites {\"B2\"}))}) (rules (start {(place \"Hare1\" (sites P1)) (place \"Rabbit2\" (sites P2) state:1)}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (is In (where \"Hare\" P1) (sites P2)) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "A square, with diagonals and lines connecting the midpoints. Two triangles on opposite sides of the triangle. One player plays as three galgos, which are placed on the three points of one of the triangles. The other player plays as one hare, which begins on the point between two of the galgos. The hare may move in any direction along the lines on the board, but must move to the central point of the board on its first move. The galgos may move forward orthogonally or diagonally; they may never move horizontally and may only move backwards if the galgo which starts on the apex of the triangle has moved and the piece to move backwards has not yet moved. If the galgos block the hare from being able to move, they win, if the hare moves past the galgos it wins."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nA square, with diagonals and lines connecting the midpoints. Two triangles on opposite sides of the triangle. One player plays as three galgos, which are placed on the three points of one of the triangles. The other player plays as one hare, which begins on the point between two of the galgos. The hare may move in any direction along the lines on the board, but must move to the central point of the board on its first move. The galgos may move forward orthogonally or diagonally; they may never move horizontally and may only move backwards if the galgo which starts on the apex of the triangle has moved and the piece to move backwards has not yet moved. If the galgos block the hare from being able to move, they win, if the hare moves past the galgos it wins.\n\n### Response:\n",
    "completion": "(game \"La Liebre Perseguida\" (players 2) (equipment {(board (rotate 90 (merge {(rectangle 3 3 diagonals:Alternating) (shift 1.5 0.5 (rotate -90 (wedge 2))) (shift -1.5 0.5 (rotate 90 (wedge 2)))})) use:Vertex) (piece \"Hare\" P1 (move Step Orthogonal (to if:(is Empty (to))))) (piece \"Rabbit\" P2 N (or (if (= (state at:(from)) 1) (move Step Backwards (to if:(and (is In (to) (sites Bottom)) (is Empty (to)))) (then (if (= (state at:(last To)) 1) (set State at:(last To) 0))))) (move Step Forwards (to if:(is Empty (to))) (then (if (= (state at:(last To)) 1) (set State at:(last To) 0)))))) (regions \"Home\" P2 (sites {\"B1\" \"C2\" \"A2\"})) (regions \"Home\" P1 (sites {\"B2\"}))}) (rules (start {(place \"Hare1\" (sites P1)) (place \"Rabbit2\" (sites P2) state:1)}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (is In (where \"Hare\" P1) (sites P2)) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "A square, with diagonals and lines connecting the midpoints. Two triangles on opposite sides of the triangle. One player plays as three galgos, which are placed on the three points of one of the triangles. The other player plays as one hare, which begins on the point between two of the galgos. The hare may move in any direction along the lines on the board, but must move to the central point of the board on its first move. The galgos may move forward orthogonally or diagonally; they may never move horizontally and may only move backwards if the galgo which starts on the apex of the triangle has moved and the piece to move backwards has not yet moved. If the galgos block the hare from being able to move, they win, if the hare moves past the galgos it wins."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nA square, with diagonals and lines connecting the midpoints. Two triangles on opposite sides of the triangle. One player plays as three galgos, which are placed on the three points of one of the triangles. The other player plays as one hare, which begins on the point between two of the galgos. The hare may move in any direction along the lines on the board, but must move to the central point of the board on its first move. The galgos may move forward orthogonally or diagonally; they may never move horizontally and may only move backwards if the galgo which starts on the apex of the triangle has moved and the piece to move backwards has not yet moved. If the galgos block the hare from being able to move, they win, if the hare moves past the galgos it wins.\n\n### Response:\n",
    "completion": "(game \"La Liebre Perseguida\" (players 2) (equipment {(board (rotate 90 (merge {(rectangle 3 3 diagonals:Alternating) (shift 1.5 0.5 (rotate -90 (wedge 2))) (shift -1.5 0.5 (rotate 90 (wedge 2)))})) use:Vertex) (piece \"Hare\" P1 (move Step Orthogonal (to if:(is Empty (to))))) (piece \"Rabbit\" P2 N (or (if (= (state at:(from)) 1) (move Step Backwards (to if:(and (is In (to) (sites Bottom)) (is Empty (to)))) (then (if (= (state at:(last To)) 1) (set State at:(last To) 0))))) (move Step Forwards (to if:(is Empty (to))) (then (if (= (state at:(last To)) 1) (set State at:(last To) 0)))))) (regions \"Home\" P2 (sites {\"B1\" \"C2\" \"A2\"})) (regions \"Home\" P1 (sites {\"B2\"}))}) (rules (start {(place \"Hare1\" (sites P1)) (place \"Rabbit2\" (sites P2) state:1)}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (is In (where \"Hare\" P1) (sites P2)) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "A square, with diagonals and lines connecting the midpoints. Two triangles on opposite sides of the triangle. One player plays as three galgos, which are placed on the three points of one of the triangles. The other player plays as one hare, which begins on the point between two of the galgos. The hare may move in any direction along the lines on the board, but must move to the central point of the board on its first move. The galgos may move forward orthogonally or diagonally; they may never move horizontally and may only move backwards if the galgo which starts on the apex of the triangle has moved and the piece to move backwards has not yet moved. If the galgos block the hare from being able to move, they win, if the hare moves past the galgos it wins."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n4x4 board. One player plays as four tigers, which begin the board placed in the four corner spaces. The other player plays as twelve oxen. The first move is made by placing one of the oxen on an empty space, followed by a move by the tiger closest to the ox. Players continue alternating moves, the oxen player placing an ox and the tiger player moving a tiger. When moving, pieces move to an empty adjacent spot orthogonally. Once all of the oxen are placed, the players alternate turns moving their pieces on the board. Pieces may capture another piece by hopping over an adjacent opponent's piece to an empty space immediately on the opposite side of it. Tigers capture orthogonally, oxen capture diagonally. Oxen may also capture a tiger by blocking it from being able to move. The oxen win by reducing the tigers to two.\n\n### Response:\n",
    "completion": "(game \"Len Cua Kin Ngoa\" (players 2) (equipment {(board (square 4)) (hand P1) (piece \"Ox\" P1 (or (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step Orthogonal (to if:(is Empty (to)))))) (piece \"Tiger\" P2 (or (move Hop Orthogonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step Orthogonal (to if:(is Empty (to))))))}) (rules (start {(place \"Ox1\" (handSite P1) count:12) (place \"Tiger2\" (sites Corners))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)) (then (forEach Site (sites Occupied by:Next) (if (not (can Move (or (step (from (site)) Orthogonal (to if:(is Empty (to)))) (hop (from (site)) Orthogonal (between if:(= (who at:(between)) P1) (apply (remove (between)))) (to if:(is Empty (to))))))) (remove (site))))))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"MovementP1\")) (phase \"MovementP1\" P1 (play (forEach Piece (then (forEach Site (sites Occupied by:Next) (if (not (can Move (or (step (from (site)) Orthogonal (to if:(is Empty (to)))) (hop (from (site)) Orthogonal (between if:(= (who at:(between)) P1) (apply (remove (between)))) (to if:(is Empty (to))))))) (remove (site)))))))) (phase \"FirstTigerMovement\" P2 (play (forEach Piece (if (= (count Steps (from) (last To)) (min (results from:(last To) to:(sites Corners) (count Steps (from) (to))))) (or (move Hop Orthogonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))))) (nextPhase Mover \"MovementP2\")) (phase \"MovementP2\" P2 (play (forEach Piece)))} (end {(if (no Pieces P1) (result P2 Win)) (if (>= 2 (count Pieces P2)) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "4x4 board. One player plays as four tigers, which begin the board placed in the four corner spaces. The other player plays as twelve oxen. The first move is made by placing one of the oxen on an empty space, followed by a move by the tiger closest to the ox. Players continue alternating moves, the oxen player placing an ox and the tiger player moving a tiger. When moving, pieces move to an empty adjacent spot orthogonally. Once all of the oxen are placed, the players alternate turns moving their pieces on the board. Pieces may capture another piece by hopping over an adjacent opponent's piece to an empty space immediately on the opposite side of it. Tigers capture orthogonally, oxen capture diagonally. Oxen may also capture a tiger by blocking it from being able to move. The oxen win by reducing the tigers to two."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n4x4 board. One player plays as four tigers, which begin the board placed in the four corner spaces. The other player plays as twelve oxen. The first move is made by placing one of the oxen on an empty space, followed by a move by the tiger closest to the ox. Players continue alternating moves, the oxen player placing an ox and the tiger player moving a tiger. When moving, pieces move to an empty adjacent spot orthogonally. Once all of the oxen are placed, the players alternate turns moving their pieces on the board. Pieces may capture another piece by hopping over an adjacent opponent's piece to an empty space immediately on the opposite side of it. Tigers capture orthogonally, oxen capture diagonally. Oxen may also capture a tiger by blocking it from being able to move. The oxen win by reducing the tigers to two.\n\n### Response:\n",
    "completion": "(game \"Len Cua Kin Ngoa\" (players 2) (equipment {(board (square 4)) (hand P1) (piece \"Ox\" P1 (or (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step Orthogonal (to if:(is Empty (to)))))) (piece \"Tiger\" P2 (or (move Hop Orthogonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step Orthogonal (to if:(is Empty (to))))))}) (rules (start {(place \"Ox1\" (handSite P1) count:12) (place \"Tiger2\" (sites Corners))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)) (then (forEach Site (sites Occupied by:Next) (if (not (can Move (or (step (from (site)) Orthogonal (to if:(is Empty (to)))) (hop (from (site)) Orthogonal (between if:(= (who at:(between)) P1) (apply (remove (between)))) (to if:(is Empty (to))))))) (remove (site))))))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"MovementP1\")) (phase \"MovementP1\" P1 (play (forEach Piece (then (forEach Site (sites Occupied by:Next) (if (not (can Move (or (step (from (site)) Orthogonal (to if:(is Empty (to)))) (hop (from (site)) Orthogonal (between if:(= (who at:(between)) P1) (apply (remove (between)))) (to if:(is Empty (to))))))) (remove (site)))))))) (phase \"FirstTigerMovement\" P2 (play (forEach Piece (if (= (count Steps (from) (last To)) (min (results from:(last To) to:(sites Corners) (count Steps (from) (to))))) (or (move Hop Orthogonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))))) (nextPhase Mover \"MovementP2\")) (phase \"MovementP2\" P2 (play (forEach Piece)))} (end {(if (no Pieces P1) (result P2 Win)) (if (>= 2 (count Pieces P2)) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "4x4 board. One player plays as four tigers, which begin the board placed in the four corner spaces. The other player plays as twelve oxen. The first move is made by placing one of the oxen on an empty space, followed by a move by the tiger closest to the ox. Players continue alternating moves, the oxen player placing an ox and the tiger player moving a tiger. When moving, pieces move to an empty adjacent spot orthogonally. Once all of the oxen are placed, the players alternate turns moving their pieces on the board. Pieces may capture another piece by hopping over an adjacent opponent's piece to an empty space immediately on the opposite side of it. Tigers capture orthogonally, oxen capture diagonally. Oxen may also capture a tiger by blocking it from being able to move. The oxen win by reducing the tigers to two."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n4x4 board. One player plays as four tigers, which begin the board placed in the four corner spaces. The other player plays as twelve oxen. The first move is made by placing one of the oxen on an empty space, followed by a move by the tiger closest to the ox. Players continue alternating moves, the oxen player placing an ox and the tiger player moving a tiger. When moving, pieces move to an empty adjacent spot orthogonally. Once all of the oxen are placed, the players alternate turns moving their pieces on the board. Pieces may capture another piece by hopping over an adjacent opponent's piece to an empty space immediately on the opposite side of it. Tigers capture orthogonally, oxen capture diagonally. Oxen may also capture a tiger by blocking it from being able to move. The oxen win by reducing the tigers to two.\n\n### Response:\n",
    "completion": "(game \"Len Cua Kin Ngoa\" (players 2) (equipment {(board (square 4)) (hand P1) (piece \"Ox\" P1 (or (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step Orthogonal (to if:(is Empty (to)))))) (piece \"Tiger\" P2 (or (move Hop Orthogonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step Orthogonal (to if:(is Empty (to))))))}) (rules (start {(place \"Ox1\" (handSite P1) count:12) (place \"Tiger2\" (sites Corners))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)) (then (forEach Site (sites Occupied by:Next) (if (not (can Move (or (step (from (site)) Orthogonal (to if:(is Empty (to)))) (hop (from (site)) Orthogonal (between if:(= (who at:(between)) P1) (apply (remove (between)))) (to if:(is Empty (to))))))) (remove (site))))))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"MovementP1\")) (phase \"MovementP1\" P1 (play (forEach Piece (then (forEach Site (sites Occupied by:Next) (if (not (can Move (or (step (from (site)) Orthogonal (to if:(is Empty (to)))) (hop (from (site)) Orthogonal (between if:(= (who at:(between)) P1) (apply (remove (between)))) (to if:(is Empty (to))))))) (remove (site)))))))) (phase \"FirstTigerMovement\" P2 (play (forEach Piece (if (= (count Steps (from) (last To)) (min (results from:(last To) to:(sites Corners) (count Steps (from) (to))))) (or (move Hop Orthogonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))))) (nextPhase Mover \"MovementP2\")) (phase \"MovementP2\" P2 (play (forEach Piece)))} (end {(if (no Pieces P1) (result P2 Win)) (if (>= 2 (count Pieces P2)) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "4x4 board. One player plays as four tigers, which begin the board placed in the four corner spaces. The other player plays as twelve oxen. The first move is made by placing one of the oxen on an empty space, followed by a move by the tiger closest to the ox. Players continue alternating moves, the oxen player placing an ox and the tiger player moving a tiger. When moving, pieces move to an empty adjacent spot orthogonally. Once all of the oxen are placed, the players alternate turns moving their pieces on the board. Pieces may capture another piece by hopping over an adjacent opponent's piece to an empty space immediately on the opposite side of it. Tigers capture orthogonally, oxen capture diagonally. Oxen may also capture a tiger by blocking it from being able to move. The oxen win by reducing the tigers to two."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThe board has no extension and joined diagonals. Haretavl rules. The board has no extension and joined diagonals. Haretavl rules.\n\n### Response:\n",
    "completion": "(game \"Ludus Coriovalli\" (players 2) (equipment {(board (add (merge {(scale 2 1 (rectangle 1 3)) (rectangle 2 1) (shift 4 0 (rectangle 2 1)) (shift 4 1.5 (rectangle 2 1)) (shift 0 1.5 (rectangle 2 1)) (scale 2 1 (shift 0 2.5 (rectangle 1 3)))}) edges:{{3 7} {5 4} {9 1} {3 1} {1 4} {5 9} {9 7}}) use:Vertex) (hand Each) (piece \"Dog\" P1 (move Step (to if:(is Empty (to))))) (piece \"Hare\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Dog1\" (handSite P1) count:3) (place \"Hare2\" (handSite P2))}) phases:{(phase \"Placement\" (play (move (from (handSite Mover)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P2) (result P1 Win)) (if (or (>= (count Moves) (- (value MoveLimit) 10)) (>= (count Turns) (- (value TurnLimit) 5))) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "The board has no extension and joined diagonals. Haretavl rules. The board has no extension and joined diagonals. Haretavl rules."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThe board has no extension and joined diagonals. Haretavl rules. The board has no extension and joined diagonals. Haretavl rules. The pieces start on the board.\n\n### Response:\n",
    "completion": "(game \"Ludus Coriovalli\" (players 2) (equipment {(board (add (merge {(scale 2 1 (rectangle 1 3)) (rectangle 2 1) (shift 4 0 (rectangle 2 1)) (shift 4 1.5 (rectangle 2 1)) (shift 0 1.5 (rectangle 2 1)) (scale 2 1 (shift 0 2.5 (rectangle 1 3)))}) edges:{{3 7} {5 4} {9 1} {3 1} {1 4} {5 9} {9 7}}) use:Vertex) (piece \"Dog\" P1 (move Step (to if:(is Empty (to))))) (piece \"Hare\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Dog1\" (sites {\"A4\" \"B4\" \"C4\"})) (place \"Hare2\" (sites {\"B1\"}))}) (play (forEach Piece)) (end {(if (no Moves P2) (result P1 Win)) (if (or (>= (count Moves) (- (value MoveLimit) 10)) (>= (count Turns) (- (value TurnLimit) 5))) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "The board has no extension and joined diagonals. Haretavl rules. The board has no extension and joined diagonals. Haretavl rules. The pieces start on the board."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nThe board has no extension and joined diagonals. Haretavl rules. The board has no extension and joined diagonals. Haretavl rules. The pieces start on the board.\n\n### Response:\n",
    "completion": "(game \"Ludus Coriovalli\" (players 2) (equipment {(board (add (merge {(scale 2 1 (rectangle 1 3)) (rectangle 2 1) (shift 4 0 (rectangle 2 1)) (shift 4 1.5 (rectangle 2 1)) (shift 0 1.5 (rectangle 2 1)) (scale 2 1 (shift 0 2.5 (rectangle 1 3)))}) edges:{{3 7} {5 4} {9 1} {3 1} {1 4} {5 9} {9 7}}) use:Vertex) (piece \"Dog\" P2 (move Step (to if:(is Empty (to))))) (piece \"Hare\" P1 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Hare1\" (sites {\"B1\"})) (place \"Dog2\" (sites {\"A4\" \"B4\" \"C4\"}))}) (play (forEach Piece)) (end {(if (no Moves P1) (result P2 Win)) (if (or (>= (count Moves) (- (value MoveLimit) 10)) (>= (count Turns) (- (value TurnLimit) 5))) (result P1 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "The board has no extension and joined diagonals. Haretavl rules. The board has no extension and joined diagonals. Haretavl rules. The pieces start on the board."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals in each 3x3 quadrant. One player plays with two tigers, which begin on the central spot. The other player plays as 24 goats. The goats play first, and may place a piece on any empty spot. The tigers move to an empty spot any distance along the lines on the board, or may hop over an adjacent goat to capture it, provided there is an empty spot immediately on the other side of the goat. Once all of the goats are placed, they may move along the lines to an empty adjacent spot. If the tigers cannot move, the goats win. The tigers win by capturing all the goats.\n\n### Response:\n",
    "completion": "(game \"Main Tapak Empat\" (players 2) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (piece \"Goat\" P1 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (hand P1)}) (rules (start {(place Stack \"Tiger2\" (centrePoint)) (place Stack \"Goat1\" (handSite P1) count:24)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))))) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P2) (result P1 Win)) (if (no Pieces P1) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals in each 3x3 quadrant. One player plays with two tigers, which begin on the central spot. The other player plays as 24 goats. The goats play first, and may place a piece on any empty spot. The tigers move to an empty spot any distance along the lines on the board, or may hop over an adjacent goat to capture it, provided there is an empty spot immediately on the other side of the goat. Once all of the goats are placed, they may move along the lines to an empty adjacent spot. If the tigers cannot move, the goats win. The tigers win by capturing all the goats."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals in each 3x3 quadrant. One player plays with two tigers, which begin on the central spot. The other player plays as 24 goats. The goats play first, and may place a piece on any empty spot. The tigers move to an empty spot any distance along the lines on the board, or may hop over an adjacent goat to capture it, provided there is an empty spot immediately on the other side of the goat. Once all of the goats are placed, they may move along the lines to an empty adjacent spot. If the tigers cannot move, the goats win. The tigers win by capturing all the goats.\n\n### Response:\n",
    "completion": "(game \"Main Tapak Empat\" (players 2) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (piece \"Goat\" P1 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (hand P1)}) (rules (start {(place Stack \"Tiger2\" (centrePoint)) (place Stack \"Goat1\" (handSite P1) count:24)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))))) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P2) (result P1 Win)) (if (no Pieces P1) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals in each 3x3 quadrant. One player plays with two tigers, which begin on the central spot. The other player plays as 24 goats. The goats play first, and may place a piece on any empty spot. The tigers move to an empty spot any distance along the lines on the board, or may hop over an adjacent goat to capture it, provided there is an empty spot immediately on the other side of the goat. Once all of the goats are placed, they may move along the lines to an empty adjacent spot. If the tigers cannot move, the goats win. The tigers win by capturing all the goats."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\n5x5 intersecting lines, with diagonals in each 3x3 quadrant. One player plays with two tigers, which begin on the central spot. The other player plays as 24 goats. The goats play first, and may place a piece on any empty spot. The tigers move to an empty spot any distance along the lines on the board, or may hop over an adjacent goat to capture it, provided there is an empty spot immediately on the other side of the goat. Once all of the goats are placed, they may move along the lines to an empty adjacent spot. If the tigers cannot move, the goats win. The tigers win by capturing all the goats.\n\n### Response:\n",
    "completion": "(game \"Main Tapak Empat\" (players 2) (equipment {(board (rectangle 5 5 diagonals:Alternating) use:Vertex) (piece \"Goat\" P1 (move Step (to if:(is Empty (to))))) (piece \"Tiger\" P2 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (hand P1)}) (rules (start {(place Stack \"Tiger2\" (centrePoint)) (place Stack \"Goat1\" (handSite P1) count:24)}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))))) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves P2) (result P1 Win)) (if (no Pieces P1) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "5x5 intersecting lines, with diagonals in each 3x3 quadrant. One player plays with two tigers, which begin on the central spot. The other player plays as 24 goats. The goats play first, and may place a piece on any empty spot. The tigers move to an empty spot any distance along the lines on the board, or may hop over an adjacent goat to capture it, provided there is an empty spot immediately on the other side of the goat. Once all of the goats are placed, they may move along the lines to an empty adjacent spot. If the tigers cannot move, the goats win. The tigers win by capturing all the goats."
  },
  {
    "prompt": "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nConstruct a Ludii game based on the following description.\n\n### Input:\nPlayed on cross-shaped board, made of five squares, each divided into four squares and with the diagonals of the larger squares drawn. One player plays with thirteen pieces situated on every point of one arm of the cross and along the line immediately perpendicular to that arm. The other plays as the Punipeki, which is placed on any empty spot on the first turn. Pieces move along the lines to an adjacent empty spot. The Punipeki may jump over an adjacent piece to capture it. The Punipeki wins if it can capture all the opponent's pieces, the other player wins by blocking the Punipeki from moving.\n\n### Response:\n",
    "completion": "(game \"Manu\" (players 2) (equipment {(board (merge (shift 0 (/ (- 7 3) 2) (rectangle 3 7 diagonals:Alternating)) (shift (/ (- 7 3) 2) 0 (rectangle 7 3 diagonals:Alternating))) use:Vertex) (hand P1) (piece \"Stick\" P1 (or (move Hop (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))) (piece \"Marker\" P2 (move Step (to if:(is Empty (to)))))}) (rules (start {(place \"Marker2\" (union (expand (sites Bottom)) (sites Row 2))) (place \"Stick1\" (handSite P1))}) phases:{(phase \"Placement\" P1 (play (move (from (handSite P1)) (to (sites Empty)))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) \"Movement\")) (phase \"Movement\" (play (forEach Piece)))} (end {(if (no Moves Next) (result Next Loss)) (if (no Pieces P2) (result P2 Win))})))",
    "_var_instruction": "Construct a Ludii game based on the following description.",
    "_var_input": "Played on cross-shaped board, made of five squares, each divided into four squares and with the diagonals of the larger squares drawn. One player plays with thirteen pieces situated on every point of one arm of the cross and along the line immediately perpendicular to that arm. The other plays as the Punipeki, which is placed on any empty spot on the first turn. Pieces move along the lines to an adjacent empty spot. The Punipeki may jump over an adjacent piece to capture it. The Punipeki wins if it can capture all the opponent's pieces, the other player wins by blocking the Punipeki from moving."
  }
]